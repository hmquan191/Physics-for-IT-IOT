[
    {
        "id": "14bfc18097a1d994",
        "type": "tab",
        "label": "AnhQuan",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "1aecfb4e899d4f90",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "dce026e34c11868c",
        "type": "tab",
        "label": "AnhQuan",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9f8951a2a6b0f73a",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "46e34e34787215c0",
        "type": "tab",
        "label": "Temperature and Humidity",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "959713e9ef15b33a",
        "type": "tab",
        "label": "Sign Up ",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1a5ea6e5b62011a",
        "type": "tab",
        "label": "Login",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "eb4cba9eeaea9dad",
        "type": "tab",
        "label": "Status",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "265eeabc37a6c132",
        "type": "tab",
        "label": "AnhQuan",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2fcb2a5fc7d08d51",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "892aaae7182dce6a",
        "type": "ui_group",
        "name": "Default",
        "tab": "5ba352c897b8b12c",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ba352c897b8b12c",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "12e79c5a1392b0c4",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#030307",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#030307",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#030307",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1a1a3d",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#030307",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "48c8904947e5f631",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "a8fb29437dafb52b",
        "type": "ui_group",
        "name": "Default",
        "tab": "7237b0658d34ce6f",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5d4133c9155fdfa4",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "7237b0658d34ce6f",
        "type": "ui_tab",
        "name": "Home",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6587bb76865c6721",
        "type": "ui_tab",
        "name": "SignUpTab",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "1853bdb01bca2068",
        "type": "ui_group",
        "name": "Trang Đăng Ký",
        "tab": "6587bb76865c6721",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "09ce1fd16ace9a83",
        "type": "ui_tab",
        "name": "StatusTab",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b109a900dc0b4299",
        "type": "ui_tab",
        "name": "LogInTab",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "c671bce3724eda32",
        "type": "ui_group",
        "name": "Trang Đăng Nhập",
        "tab": "b109a900dc0b4299",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a4e98edf4769eb4d",
        "type": "ui_group",
        "name": "Trang Quản Lý",
        "tab": "09ce1fd16ace9a83",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "acacd5143ed5d34f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "358779d1e87ddd82",
        "type": "ui_group",
        "name": "History",
        "tab": "cf82fb25652dc4a2",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7f808b69393948b7",
        "type": "ui_group",
        "name": "Login",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c64b783c42bdedda",
        "type": "ui_group",
        "name": "Logout",
        "tab": "cf82fb25652dc4a2",
        "order": 6,
        "disp": true,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1bd5cf0ad5cfca6e",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4460ce5202b9df5c",
        "type": "ui_group",
        "name": "Temperature and humidity",
        "tab": "cf82fb25652dc4a2",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9182e764bc2d1254",
        "type": "ui_group",
        "name": "chart",
        "tab": "cf82fb25652dc4a2",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "bbe2d1663c57724d",
        "type": "ui_group",
        "name": "Control",
        "tab": "cf82fb25652dc4a2",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9d9f163294fb9227",
        "type": "ui_group",
        "name": "Sign in",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "cf82fb25652dc4a2",
        "type": "ui_tab",
        "name": "Smart locker LOL tracking",
        "icon": "settings",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8a708b2f28e83c56",
        "type": "ui_tab",
        "name": "LogOutTab",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "ee55287e84322ba8",
        "type": "ui_group",
        "name": "Default",
        "tab": "8a708b2f28e83c56",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2551a8a3e7230303",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#26a51d",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#26a51d",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#26a51d",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#3edb33",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#26a51d",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "400f17b224da8621",
        "type": "ui_tab",
        "name": "SignUpTab",
        "icon": "dashboard",
        "order": 3,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "d5c436054d988ce9",
        "type": "ui_group",
        "name": "Trang Đăng Ký",
        "tab": "400f17b224da8621",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "e25fbf8bf41181a6",
        "type": "ui_tab",
        "name": "StatusTab",
        "icon": "dashboard",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8ea12345b2d33ed0",
        "type": "ui_tab",
        "name": "LogInTab",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8e6bc74c871db5e8",
        "type": "ui_group",
        "name": "Trang Đăng Nhập",
        "tab": "8ea12345b2d33ed0",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "ca4de4f1fbb01085",
        "type": "ui_group",
        "name": "Trang Quản Lý",
        "tab": "e25fbf8bf41181a6",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5e5231a0d25397df",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.mqtt-dashboard.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "12111436f1e3fc07",
        "type": "ui_group",
        "name": "History",
        "tab": "afef167a27687abb",
        "order": 3,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f8864be9c8fccaeb",
        "type": "ui_group",
        "name": "Login",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "8f723c0be1f93bcd",
        "type": "ui_group",
        "name": "Logout",
        "tab": "afef167a27687abb",
        "order": 6,
        "disp": true,
        "width": "2",
        "collapse": false,
        "className": ""
    },
    {
        "id": "1fafc09964ec5a6f",
        "type": "mqtt-broker",
        "name": "",
        "broker": "broker.hivemq.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bf6db9d90ec7a4e5",
        "type": "ui_group",
        "name": "Temperature and humidity",
        "tab": "afef167a27687abb",
        "order": 5,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "2c4b226e8e819202",
        "type": "ui_group",
        "name": "chart",
        "tab": "afef167a27687abb",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "5ce9ee3403a8972c",
        "type": "ui_group",
        "name": "Control",
        "tab": "afef167a27687abb",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "9f111a7e1b7caa2d",
        "type": "ui_group",
        "name": "Sign in",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "afef167a27687abb",
        "type": "ui_tab",
        "name": "Smart locker LOL tracking",
        "icon": "settings",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "bc654fdfb7926494",
        "type": "ui_tab",
        "name": "LogOutTab",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "42ac839944e361ae",
        "type": "ui_group",
        "name": "Default",
        "tab": "bc654fdfb7926494",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false,
        "className": ""
    },
    {
        "id": "994d90d6fbc5a06e",
        "type": "mongodb3",
        "uri": "mongodb+srv://anhquan2004162:anhquan162@cluster0.ryy4wff.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "e44eed23bfcbd07f",
        "type": "mongodb3",
        "uri": "mongodb+srv://hmquan22:iB6kbwh8wJkQrdku@cluster0.asm4k.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "c5a4c487afea4679",
        "type": "mongodb3",
        "uri": "mongodb+srv://hmquan22:nodered@cluster0.xvm7n.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "f6ca4f4080524182",
        "type": "mongodb3",
        "uri": "mongodb+srv://hmquan22:PWTRXijl4wl5rViN@cluster0.d03yv.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "659fdf5b0b069cd0",
        "type": "mongodb3",
        "uri": "mongodb+srv://anhquan2004162:anhquan162@cluster0.ryy4wff.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "d502d27466fdea61",
        "type": "mongodb3",
        "uri": "mongodb+srv://juinkinn:22127478@iot.8xeuq.mongodb.net/?retryWrites=true&w=majority&appName=iot",
        "name": "IOT",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "5740bd9fa9869dfd",
        "type": "mqtt in",
        "z": "14bfc18097a1d994",
        "name": "",
        "topic": "/22127344/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "acacd5143ed5d34f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "f8d154084904e51c"
            ]
        ]
    },
    {
        "id": "f8d154084904e51c",
        "type": "debug",
        "z": "14bfc18097a1d994",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "5487f84809da78a5",
        "type": "mqtt out",
        "z": "14bfc18097a1d994",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "acacd5143ed5d34f",
        "x": 330,
        "y": 220,
        "wires": []
    },
    {
        "id": "3f15a60df0b6ccd7",
        "type": "ui_date_picker",
        "z": "14bfc18097a1d994",
        "name": "",
        "label": "date",
        "group": "358779d1e87ddd82",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "5487f84809da78a5"
            ]
        ]
    },
    {
        "id": "c45fb4fcff591625",
        "type": "ui_form",
        "z": "14bfc18097a1d994",
        "name": "Login",
        "label": "",
        "group": "7f808b69393948b7",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "b2f2d81f92faa611"
            ]
        ]
    },
    {
        "id": "705685e774a16670",
        "type": "ui_ui_control",
        "z": "14bfc18097a1d994",
        "name": "Sign in",
        "events": "all",
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "637bdf67e1a6204e",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "Username",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 860,
        "wires": [
            [
                "b9e23203509cef6a"
            ]
        ]
    },
    {
        "id": "601b98a003bc1d1a",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "Password",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 920,
        "wires": [
            [
                "ce1c8dcdc6bb2967"
            ]
        ]
    },
    {
        "id": "b9e23203509cef6a",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "705685e774a16670"
            ]
        ]
    },
    {
        "id": "ce1c8dcdc6bb2967",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "705685e774a16670"
            ]
        ]
    },
    {
        "id": "b2f2d81f92faa611",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (username == flow.get(\"user\"))\n{\n    if (password == flow.get(\"pass\"))\n    {\n        msg.payload = 0;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "d7b052b8f3dd5184"
            ]
        ]
    },
    {
        "id": "d7b052b8f3dd5184",
        "type": "switch",
        "z": "14bfc18097a1d994",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "ca1277b435b2a14f"
            ],
            [
                "1551030c89034e33"
            ]
        ]
    },
    {
        "id": "ca1277b435b2a14f",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "318319b2e0c45f52"
            ]
        ]
    },
    {
        "id": "1551030c89034e33",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "c44313ec2aa23968"
            ]
        ]
    },
    {
        "id": "318319b2e0c45f52",
        "type": "ui_ui_control",
        "z": "14bfc18097a1d994",
        "name": "Homepage",
        "events": "all",
        "x": 930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "c44313ec2aa23968",
        "type": "ui_toast",
        "z": "14bfc18097a1d994",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 930,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "3eb8e868132bf773",
        "type": "comment",
        "z": "14bfc18097a1d994",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 440,
        "wires": []
    },
    {
        "id": "5ad2f9de37a053b5",
        "type": "ui_button",
        "z": "14bfc18097a1d994",
        "name": "Logout",
        "group": "c64b783c42bdedda",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "f0419c8fc9e2a6f9"
            ]
        ]
    },
    {
        "id": "d8a8ddf891554361",
        "type": "inject",
        "z": "14bfc18097a1d994",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "637bdf67e1a6204e",
                "601b98a003bc1d1a"
            ]
        ]
    },
    {
        "id": "f0419c8fc9e2a6f9",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "74419eabc4dbb837"
            ]
        ]
    },
    {
        "id": "74419eabc4dbb837",
        "type": "ui_ui_control",
        "z": "14bfc18097a1d994",
        "name": "Logout",
        "events": "all",
        "x": 470,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "ee5e457abaf3f7f2",
        "type": "comment",
        "z": "14bfc18097a1d994",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 160,
        "y": 720,
        "wires": []
    },
    {
        "id": "1e1ce74dc780e09b",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?id=1580578&appid=bdc87536ce16f695eea1f63159c980f5&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "18ef40dbb96c9bae"
            ]
        ]
    },
    {
        "id": "2c74c804ecc58e0a",
        "type": "inject",
        "z": "14bfc18097a1d994",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "1e1ce74dc780e09b"
            ]
        ]
    },
    {
        "id": "18ef40dbb96c9bae",
        "type": "json",
        "z": "14bfc18097a1d994",
        "name": "temp",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "e27e93195d580127",
                "14a96fdb21d2fcbc"
            ]
        ]
    },
    {
        "id": "8784f10a54fedb18",
        "type": "inject",
        "z": "14bfc18097a1d994",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "37722740d368b8f1"
            ]
        ]
    },
    {
        "id": "37722740d368b8f1",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=11K54XX95HWOFJD1&field1=27",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "14a96fdb21d2fcbc"
            ]
        ]
    },
    {
        "id": "14a96fdb21d2fcbc",
        "type": "debug",
        "z": "14bfc18097a1d994",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "e27e93195d580127",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "function 5",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ea098525a72d255f",
        "type": "comment",
        "z": "14bfc18097a1d994",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 130,
        "y": 960,
        "wires": []
    },
    {
        "id": "adfbe748a94025b0",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Mở/khóa cửa",
        "func": "if (msg.payload == \"true\")\n{\n    msg.payload = \"on\"\n}\nelse{\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "c1b77269816d03c4",
                "0b04df82fe03cef3"
            ]
        ]
    },
    {
        "id": "c1b77269816d03c4",
        "type": "mqtt out",
        "z": "14bfc18097a1d994",
        "name": "",
        "topic": "/22127344/DoorControl",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1bd5cf0ad5cfca6e",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "d6b1e7aa425d0544",
        "type": "mqtt in",
        "z": "14bfc18097a1d994",
        "name": "",
        "topic": "SmartLock/In",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "acacd5143ed5d34f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "cc7a80b27f1e6806"
            ]
        ]
    },
    {
        "id": "cc7a80b27f1e6806",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Get Temp and humid",
        "func": "var p = msg.payload\nmsg.payload = []\n\nconst arr = [p.temp,p.humid]\nflow.set(\"temp\", arr[0])\nflow.set(\"humid\", arr[1])\n\nmsg.payload.push(arr[0])\nmsg.payload.push(arr[1]) \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "b40baaa652599b5c"
            ]
        ]
    },
    {
        "id": "df10b331b0c38e53",
        "type": "ui_gauge",
        "z": "14bfc18097a1d994",
        "name": "",
        "group": "4460ce5202b9df5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{msg.temp}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": []
    },
    {
        "id": "eeb19749191f3669",
        "type": "ui_gauge",
        "z": "14bfc18097a1d994",
        "name": "",
        "group": "4460ce5202b9df5c",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{msg.humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1400,
        "wires": []
    },
    {
        "id": "d9443781774d9511",
        "type": "comment",
        "z": "14bfc18097a1d994",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "9cd2fa42bb8d1de5",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "b049b221af98b374",
                "c48e46ed6be5530f"
            ]
        ]
    },
    {
        "id": "b40baaa652599b5c",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "9cd2fa42bb8d1de5",
                "df10b331b0c38e53",
                "eeb19749191f3669"
            ]
        ]
    },
    {
        "id": "c48e46ed6be5530f",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1240,
        "wires": [
            [
                "5074c7edebf4967e"
            ]
        ]
    },
    {
        "id": "5074c7edebf4967e",
        "type": "json",
        "z": "14bfc18097a1d994",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1240,
        "wires": [
            [
                "96e83dbc91249a2d"
            ]
        ]
    },
    {
        "id": "96e83dbc91249a2d",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n// msg.payload = field1Values[field1Values.length - 1];\nvar latestValues = field1Values.slice(-10);\nmsg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "5b1f74ea754ac6ba"
            ]
        ]
    },
    {
        "id": "5b1f74ea754ac6ba",
        "type": "ui_chart",
        "z": "14bfc18097a1d994",
        "name": "",
        "group": "9182e764bc2d1254",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "b049b221af98b374",
        "type": "http request",
        "z": "14bfc18097a1d994",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "29b7ab1676960ad2"
            ]
        ]
    },
    {
        "id": "29b7ab1676960ad2",
        "type": "json",
        "z": "14bfc18097a1d994",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1320,
        "wires": [
            [
                "7cf0fd121f4b1149"
            ]
        ]
    },
    {
        "id": "7cf0fd121f4b1149",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\nvar latestValues = field2Values.slice(-10);\nmsg.payload = latestValues;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "f33a4c3967194b52"
            ]
        ]
    },
    {
        "id": "f33a4c3967194b52",
        "type": "ui_chart",
        "z": "14bfc18097a1d994",
        "name": "",
        "group": "9182e764bc2d1254",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "9e4491d7d80e9d17",
        "type": "ui_switch",
        "z": "14bfc18097a1d994",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "bbe2d1663c57724d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "adfbe748a94025b0"
            ]
        ]
    },
    {
        "id": "0b04df82fe03cef3",
        "type": "debug",
        "z": "14bfc18097a1d994",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0ddb3cda4edf5dc3",
        "type": "ui_form",
        "z": "14bfc18097a1d994",
        "name": "Sign in",
        "label": "",
        "group": "9d9f163294fb9227",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "5901e644e5a57041",
                "f1d6d546b1d8db75"
            ]
        ]
    },
    {
        "id": "927d582a66955bd0",
        "type": "ui_button",
        "z": "14bfc18097a1d994",
        "name": "Button to sign in",
        "group": "7f808b69393948b7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign in",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "87b4a016ace0f561"
            ]
        ]
    },
    {
        "id": "87b4a016ace0f561",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "sign in",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "d1e49afe21cadc9d"
            ]
        ]
    },
    {
        "id": "d1e49afe21cadc9d",
        "type": "ui_ui_control",
        "z": "14bfc18097a1d994",
        "name": "To login",
        "events": "all",
        "x": 640,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "5901e644e5a57041",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "Set sign in",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "f1d6d546b1d8db75",
        "type": "function",
        "z": "14bfc18097a1d994",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "d52fbc4cd62d55a7"
            ]
        ]
    },
    {
        "id": "d52fbc4cd62d55a7",
        "type": "ui_ui_control",
        "z": "14bfc18097a1d994",
        "name": "End sign in",
        "events": "all",
        "x": 1090,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "fe1a07d6c56b7a65",
        "type": "inject",
        "z": "14bfc18097a1d994",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\": \"anhquan\"}",
        "payloadType": "json",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "960ddd6093d541b2"
            ]
        ]
    },
    {
        "id": "75176db517d496f0",
        "type": "debug",
        "z": "14bfc18097a1d994",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "960ddd6093d541b2",
        "type": "mongodb3 in",
        "z": "14bfc18097a1d994",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 1150,
        "y": 620,
        "wires": [
            [
                "75176db517d496f0"
            ]
        ]
    },
    {
        "id": "780959ba4bb354e4",
        "type": "ui_form",
        "z": "1aecfb4e899d4f90",
        "name": "Login",
        "label": "",
        "group": "7f808b69393948b7",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "0d3d4deea5b10e22"
            ]
        ]
    },
    {
        "id": "36d5489948d4fea2",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\nvar dbuser = msg.payload.dbuser  \nvar dbpass = msg.payload.dbpass\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (dbuser != undefined && dbpass != undefined){\nif (username ==dbuser && password == dbpass )\n{\n    msg.payload = 0;\n}\n}\nreturn msg;\n\n// if (username == flow.get(\"user\"))\n// {\n//     if (password == flow.get(\"pass\"))\n//     {\n//         msg.payload = 0;\n//     }\n// }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "1592221788090b4e",
                "e29da083318965ae"
            ]
        ]
    },
    {
        "id": "1592221788090b4e",
        "type": "switch",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "706b685f05c8bc64"
            ],
            [
                "545ac9ec4e2bbc9d"
            ]
        ]
    },
    {
        "id": "706b685f05c8bc64",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "be1c5bca48184581"
            ]
        ]
    },
    {
        "id": "545ac9ec4e2bbc9d",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "fa8376bd1abdcb11"
            ]
        ]
    },
    {
        "id": "be1c5bca48184581",
        "type": "ui_ui_control",
        "z": "1aecfb4e899d4f90",
        "name": "Homepage",
        "events": "all",
        "x": 1190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "fa8376bd1abdcb11",
        "type": "ui_toast",
        "z": "1aecfb4e899d4f90",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 1190,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "976c6360b970d60e",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 300,
        "wires": []
    },
    {
        "id": "2795e8907928bfa1",
        "type": "ui_button",
        "z": "1aecfb4e899d4f90",
        "name": "Logout",
        "group": "c64b783c42bdedda",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "95a306c4a8f6979c"
            ]
        ]
    },
    {
        "id": "95a306c4a8f6979c",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "a2ab040a5b970e69"
            ]
        ]
    },
    {
        "id": "a2ab040a5b970e69",
        "type": "ui_ui_control",
        "z": "1aecfb4e899d4f90",
        "name": "Logout",
        "events": "all",
        "x": 590,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3d99db31177d243b",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "160504cbdb350b67",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 110,
        "y": 880,
        "wires": []
    },
    {
        "id": "38e3776a604dc4a5",
        "type": "mqtt in",
        "z": "1aecfb4e899d4f90",
        "name": "Push sensor values",
        "topic": "/SmartLock/Sensor/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "acacd5143ed5d34f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "6b2f21e4fa488e52",
                "70591c395a3624d8"
            ]
        ]
    },
    {
        "id": "6b2f21e4fa488e52",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Get Temp and humid",
        "func": "// var p = msg.payload\n// msg.payload = []\n\n// const arr = [p.temp,p.humid]\n// flow.set(\"temp\", arr[0])\n// flow.set(\"humid\", arr[1])\n\n// msg.payload.push(arr[0])\n// msg.payload.push(arr[1]) \n\n// return msg;\n\n\nvar p = msg.payload;\n\n// Split the payload string into an array using the delimiter (comma in this case)\nvar values = p.split(',');\n\nmsg.payload = {\n    \"temp\": parseFloat(values[0]),   // Temperature\n    \"humid\": parseFloat(values[1])   // Humidity\n};\n\n// Store the values if needed\nflow.set(\"temp\", msg.payload.temp);\nflow.set(\"humid\", msg.payload.humid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "917c1cddbf0ac652"
            ]
        ]
    },
    {
        "id": "4a174eb0d068205f",
        "type": "ui_gauge",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "group": "4460ce5202b9df5c",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{temp}}",
        "min": "-30",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1200,
        "wires": []
    },
    {
        "id": "760fc1906e75ca0b",
        "type": "ui_gauge",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "group": "4460ce5202b9df5c",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "c2bd6fa2726fe268",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1180,
        "wires": []
    },
    {
        "id": "ba214df8d8f411b8",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1300,
        "wires": [
            [
                "af417804ec64f705",
                "09ab145931b2e210"
            ]
        ]
    },
    {
        "id": "917c1cddbf0ac652",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "ba214df8d8f411b8",
                "4a174eb0d068205f",
                "760fc1906e75ca0b",
                "67cf60ee41285bb9"
            ]
        ]
    },
    {
        "id": "09ab145931b2e210",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "071eaed184950f78"
            ]
        ]
    },
    {
        "id": "071eaed184950f78",
        "type": "json",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "df3ec70dea28b89b"
            ]
        ]
    },
    {
        "id": "df3ec70dea28b89b",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    let feed = msg.payload.feeds[i];\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\nfor (let i in field1Values ){\n    msg.payload = field1Values[i]\n}\n// msg.payload = field1Values\n// var latestValues = field1Values.slice(-10);\n// msg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1260,
        "wires": [
            [
                "5bbe294d0036ef8c",
                "8d89b44e8538ac46"
            ]
        ]
    },
    {
        "id": "8d89b44e8538ac46",
        "type": "ui_chart",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "group": "9182e764bc2d1254",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "af417804ec64f705",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1320,
        "wires": [
            [
                "179149d65a5b0fa2"
            ]
        ]
    },
    {
        "id": "179149d65a5b0fa2",
        "type": "json",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1320,
        "wires": [
            [
                "a7a05f351fa70934"
            ]
        ]
    },
    {
        "id": "a7a05f351fa70934",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\n// var latestValues = field2Values.slice(-10);\n// msg.payload = latestValues;\n// msg.payload = field2Values[field2Values.length - 1];\nfor (let i in field2Values) {\n    msg.payload = field2Values[i]\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "460cfe6d144cdcba"
            ]
        ]
    },
    {
        "id": "460cfe6d144cdcba",
        "type": "ui_chart",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "group": "9182e764bc2d1254",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "259e46e048e4cbf7",
        "type": "ui_form",
        "z": "1aecfb4e899d4f90",
        "name": "Sign up",
        "label": "",
        "group": "9d9f163294fb9227",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "39d8bdb98baa4a9c"
            ]
        ]
    },
    {
        "id": "e139ecea12b317d5",
        "type": "ui_button",
        "z": "1aecfb4e899d4f90",
        "name": "Tap to sign in",
        "group": "7f808b69393948b7",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "a2a324a9d7822c8b"
            ]
        ]
    },
    {
        "id": "a2a324a9d7822c8b",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "sign up",
        "func": "msg.payload = {\n    //     tabs:{\n        \n    //     hide: [\"Smart locker LOL tracking\",\"About\"]\n    // },\n    // tabs:{\n    //     show: [\"Login\", \"Smart locker LOL tracking\"]\n    // },\n   tabs:{\n    hide: [\"Smart locker LOL tracking\"]\n   },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 740,
        "wires": [
            [
                "7a18f7e14ca5a2ef"
            ]
        ]
    },
    {
        "id": "7a18f7e14ca5a2ef",
        "type": "ui_ui_control",
        "z": "1aecfb4e899d4f90",
        "name": "To sign up",
        "events": "all",
        "x": 590,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "39d8bdb98baa4a9c",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Set sign up",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nmsg.payload = {\n    username: user,\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "6b523f769a72b08f"
            ]
        ]
    },
    {
        "id": "e85a814bc455434c",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 80,
        "wires": [
            [
                "b6f6855268a036dd"
            ]
        ]
    },
    {
        "id": "b6f6855268a036dd",
        "type": "ui_ui_control",
        "z": "1aecfb4e899d4f90",
        "name": "End sign up",
        "events": "all",
        "x": 1150,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "3d24ee5bd376783a",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 180,
        "wires": []
    },
    {
        "id": "70591c395a3624d8",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "38853e5642e19985",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "Trigger push nofi from PushSafer",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=qDJi4rt2kNLkOOzwheFx&m=Nhi%E1%BB%87t%20%C4%91%E1%BB%99%20hi%E1%BB%87n%20t%E1%BA%A1i%20l%C3%A0%C2%A0{{ payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1200,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "4011b0261e35f90d",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Lấy dữ liệu nhiệt độ và gửi về điện thoại",
        "func": "msg.payload = flow.get(\"temp\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "0d9ab10506bd60d4"
            ]
        ]
    },
    {
        "id": "bc1ae29cdeb59ed9",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Truyền thông báo về điện thoại và website",
        "info": "",
        "x": 840,
        "y": 1000,
        "wires": []
    },
    {
        "id": "297743faf33b8dd7",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Thẻ từ",
        "info": "",
        "x": 60,
        "y": 2420,
        "wires": []
    },
    {
        "id": "e25a793fd7f06208",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Thông báo lịch sử",
        "info": "",
        "x": 100,
        "y": 2240,
        "wires": []
    },
    {
        "id": "1b6740dc0ac765da",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Mở tắt cảm biến",
        "info": "",
        "x": 90,
        "y": 2640,
        "wires": []
    },
    {
        "id": "2990199d4cabf3b0",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Lấy dữ liệu và gửi về email",
        "func": "msg.topic = 'NOTIFICATION ALERT'\nvar temp = flow.get(\"temp\")\nmsg.payload = 'CẢNH BÁO: Nhiệt độ hiện tại là ' +temp + ' lớn hơn 70°C, tự động mở khóa cửa'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1140,
        "wires": [
            [
                "0d9ab10506bd60d4"
            ]
        ]
    },
    {
        "id": "67cf60ee41285bb9",
        "type": "switch",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "temp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "70",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "4011b0261e35f90d",
                "2990199d4cabf3b0"
            ]
        ]
    },
    {
        "id": "2e973af3fbc732d7",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Lưu trữ dữ liệu cảm biến lên cloud ThingSpeak",
        "info": "",
        "x": 880,
        "y": 1220,
        "wires": []
    },
    {
        "id": "de4e66c77263e64d",
        "type": "ui_switch",
        "z": "1aecfb4e899d4f90",
        "name": "Bật/tắt cảm biến",
        "label": "switch",
        "tooltip": "",
        "group": "bbe2d1663c57724d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 100,
        "y": 1000,
        "wires": [
            [
                "2059e253ccb4c9d3"
            ]
        ]
    },
    {
        "id": "2059e253ccb4c9d3",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Mở/tắt cảm biến",
        "func": "if (msg.payload == \"true\") {\n    msg.payload = \"on\"\n}\nelse {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "802c2042e4caabc5",
        "type": "ui_switch",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "bbe2d1663c57724d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 90,
        "y": 920,
        "wires": [
            [
                "84fb85f910507a40"
            ]
        ]
    },
    {
        "id": "84fb85f910507a40",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Mở/khóa cửa",
        "func": "//Khóa\nif (msg.payload == \"true\")\n{\n    msg.payload = \"Door locked\"\n}\n//Mở\nelse{\n    msg.payload = \"Door open\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "ae6fb7bc7a213ffa",
                "52dc475e3f2acd93",
                "1d8d612f276e05b9",
                "665488ade21ded02"
            ]
        ]
    },
    {
        "id": "ae6fb7bc7a213ffa",
        "type": "mqtt out",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "topic": "/SmartLock/Control/DoorControl",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "acacd5143ed5d34f",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "52dc475e3f2acd93",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 820,
        "wires": []
    },
    {
        "id": "1d8d612f276e05b9",
        "type": "ui_text",
        "z": "1aecfb4e899d4f90",
        "group": "bbe2d1663c57724d",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Trạng thái cửa",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 860,
        "wires": []
    },
    {
        "id": "0d9ab10506bd60d4",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1080,
        "wires": []
    },
    {
        "id": "0d3d4deea5b10e22",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Set infor from form",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "b92bd4b81e535283"
            ]
        ]
    },
    {
        "id": "f955a60db88b4e25",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Set info from db",
        "func": "msg.payload.dbuser = msg.payload.username\nmsg.payload.dbpass = msg.payload.password\nmsg.payload.id = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 360,
        "wires": [
            [
                "36d5489948d4fea2"
            ]
        ]
    },
    {
        "id": "e29da083318965ae",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 400,
        "wires": []
    },
    {
        "id": "6d23a8670eaeb608",
        "type": "mqtt in",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "topic": "/SmartLock/RFID",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "acacd5143ed5d34f",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 2480,
        "wires": [
            [
                "7c53c5b96f8c9a71",
                "69018ac4a07a6daf"
            ]
        ]
    },
    {
        "id": "23899a0964746b4c",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "91c389e070173bee",
        "type": "ui_button",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "group": "9d9f163294fb9227",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "873c9f158b1f7e02"
            ]
        ]
    },
    {
        "id": "873c9f158b1f7e02",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "To login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 560,
        "wires": [
            [
                "418b0d6e58bd5328"
            ]
        ]
    },
    {
        "id": "418b0d6e58bd5328",
        "type": "ui_ui_control",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "665488ade21ded02",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field3={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "c83b89f7d879fae9",
        "type": "http request",
        "z": "1aecfb4e899d4f90",
        "name": "History",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/3.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 2280,
        "wires": [
            [
                "373b72219d9895c5"
            ]
        ]
    },
    {
        "id": "373b72219d9895c5",
        "type": "json",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 520,
        "y": 2280,
        "wires": [
            [
                "6023334ed11ec5ef",
                "884ef122d4336edf"
            ]
        ]
    },
    {
        "id": "6023334ed11ec5ef",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 8",
        "func": "let latestMessages = [];\n\n// Loop through the feeds array to extract the required fields\nfor (let i = 0; i < msg.payload.feeds.length; i++) {\n     if (msg.payload.feeds[i].field3 === 'Door locked' \n     || msg.payload.feeds[i].field3 === 'Door open'){ \n        let feed = msg.payload.feeds[i];\n        let date = new Date(feed.created_at);\n        let gmt7Date = new Date(date.getTime() + 7 * 60 * 60 * 1000); // Add 7 hours\n\n         // Format the adjusted date back to ISO format\n        let formattedDate = gmt7Date.toISOString().replace('T', ' ').substring(0, 19);\n    latestMessages.push({\n        \"Created_at\": formattedDate,\n        \"Status\": feed.field3\n    });}\n}\n\n// Set the latestMessages array to msg.payload for further processing\nmsg.payload = latestMessages;\n\n// Return the modified msg object\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "7c53c5b96f8c9a71",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "0b2dc553794926e1",
        "type": "ui_button",
        "z": "1aecfb4e899d4f90",
        "name": "Update",
        "group": "358779d1e87ddd82",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update cloud's history",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2280,
        "wires": [
            [
                "c83b89f7d879fae9"
            ]
        ]
    },
    {
        "id": "5bbe294d0036ef8c",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1280,
        "wires": []
    },
    {
        "id": "94e8bece28945b81",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Đăng ký",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "562f617f3a326d5c",
        "type": "comment",
        "z": "1aecfb4e899d4f90",
        "name": "Điều hướng người dùng",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "ea8b42fce8a7054b",
        "type": "change",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.id",
                "pt": "msg",
                "to": "x",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "dd62421eb2574636",
                "3972ed964da51d57"
            ]
        ]
    },
    {
        "id": "dd62421eb2574636",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 280,
        "wires": []
    },
    {
        "id": "3972ed964da51d57",
        "type": "mqtt out",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "topic": "SmartLock/RFID/Accessed",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "acacd5143ed5d34f",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "d039f1fd9a31690e",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 9",
        "func": "var sign_up_username = msg.payload.username\n\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\n// Nếu tên tìm thấy => failed\nif (sign_up_username != undefined) { \n    msg.payload = 0;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            [
                "a9773559ad32131a"
            ]
        ]
    },
    {
        "id": "a9773559ad32131a",
        "type": "switch",
        "z": "1aecfb4e899d4f90",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 60,
        "wires": [
            [
                "9d0611ce83d01446"
            ],
            [
                "e85a814bc455434c",
                "8b37ba23459af52a",
                "954828c6a9137a39"
            ]
        ]
    },
    {
        "id": "4edaee53977554cd",
        "type": "ui_toast",
        "z": "1aecfb4e899d4f90",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng ký thất bại",
        "name": "Failed Notification",
        "x": 1170,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "9d0611ce83d01446",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Failed noti",
        "func": "msg.payload = \"Đăng ký không thành công vì đã có tài khoản này.\\n Hãy thử đăng nhập!\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 40,
        "wires": [
            [
                "4edaee53977554cd"
            ]
        ]
    },
    {
        "id": "954828c6a9137a39",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 10",
        "func": "msg.payload = \"Đăng ký thành công\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 120,
        "wires": [
            [
                "61634adfe62a09b8"
            ]
        ]
    },
    {
        "id": "fe2f4088b1642d7a",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "8b37ba23459af52a",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "Get account's data",
        "func": "var user = flow.get(\"user\")\nvar pass = flow.get(\"pass\")\n\nmsg.payload = {\n    username: user,\n    password: pass\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "fe2f4088b1642d7a",
                "636cb5de1152bc21"
            ]
        ]
    },
    {
        "id": "61634adfe62a09b8",
        "type": "ui_toast",
        "z": "1aecfb4e899d4f90",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "884ef122d4336edf",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "69018ac4a07a6daf",
        "type": "function",
        "z": "1aecfb4e899d4f90",
        "name": "function 11",
        "func": "//  var id = 66c6036974ba516a448ee027\n// var id = ObjectID(66c6036974ba516a448ee027)\n// msg._id = {_id: '66c6036974ba516a448ee027'}\nmsg.payload= {\n   _id:\"66c6036974ba516a448ee027\"\n }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2440,
        "wires": [
            [
                "e76321608d70c0d7"
            ]
        ]
    },
    {
        "id": "992f6571f947c867",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2440,
        "wires": []
    },
    {
        "id": "e76321608d70c0d7",
        "type": "debug",
        "z": "1aecfb4e899d4f90",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2400,
        "wires": []
    },
    {
        "id": "636cb5de1152bc21",
        "type": "mongodb3 in",
        "z": "1aecfb4e899d4f90",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "Insert accounts to DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 700,
        "y": 180,
        "wires": [
            [
                "3d24ee5bd376783a"
            ]
        ]
    },
    {
        "id": "b92bd4b81e535283",
        "type": "mongodb3 in",
        "z": "1aecfb4e899d4f90",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "f955a60db88b4e25",
                "23899a0964746b4c",
                "ea8b42fce8a7054b"
            ]
        ]
    },
    {
        "id": "6b523f769a72b08f",
        "type": "mongodb3 in",
        "z": "1aecfb4e899d4f90",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 490,
        "y": 20,
        "wires": [
            [
                "d039f1fd9a31690e"
            ]
        ]
    },
    {
        "id": "a0d60c6e88b058e9",
        "type": "mqtt in",
        "z": "dce026e34c11868c",
        "name": "",
        "topic": "/22127344/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "3ab1362c52dff140"
            ]
        ]
    },
    {
        "id": "3ab1362c52dff140",
        "type": "debug",
        "z": "dce026e34c11868c",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "8f7585201e8e71b0",
        "type": "mqtt out",
        "z": "dce026e34c11868c",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 330,
        "y": 220,
        "wires": []
    },
    {
        "id": "779777815a58472f",
        "type": "ui_date_picker",
        "z": "dce026e34c11868c",
        "name": "",
        "label": "date",
        "group": "12111436f1e3fc07",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "8f7585201e8e71b0"
            ]
        ]
    },
    {
        "id": "9319a621a15b48ef",
        "type": "ui_form",
        "z": "dce026e34c11868c",
        "name": "Login",
        "label": "",
        "group": "f8864be9c8fccaeb",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "90ca7d42dcc36a22"
            ]
        ]
    },
    {
        "id": "3e6b16179e2b4cb2",
        "type": "ui_ui_control",
        "z": "dce026e34c11868c",
        "name": "Sign in",
        "events": "all",
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "3da49d3d1324f4f2",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "Username",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 860,
        "wires": [
            [
                "392380f2a7f0494d"
            ]
        ]
    },
    {
        "id": "58e58b31db77589c",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "Password",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 920,
        "wires": [
            [
                "7b2b11c6b0fcf0f4"
            ]
        ]
    },
    {
        "id": "392380f2a7f0494d",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "3e6b16179e2b4cb2"
            ]
        ]
    },
    {
        "id": "7b2b11c6b0fcf0f4",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "3e6b16179e2b4cb2"
            ]
        ]
    },
    {
        "id": "90ca7d42dcc36a22",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (username == flow.get(\"user\"))\n{\n    if (password == flow.get(\"pass\"))\n    {\n        msg.payload = 0;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "aec0bbf02b0f4509"
            ]
        ]
    },
    {
        "id": "aec0bbf02b0f4509",
        "type": "switch",
        "z": "dce026e34c11868c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "6973be5516194f18"
            ],
            [
                "b5f423ecfc99af06"
            ]
        ]
    },
    {
        "id": "6973be5516194f18",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "4f29b8bc9488644e"
            ]
        ]
    },
    {
        "id": "b5f423ecfc99af06",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "d5c1add6ae736653"
            ]
        ]
    },
    {
        "id": "4f29b8bc9488644e",
        "type": "ui_ui_control",
        "z": "dce026e34c11868c",
        "name": "Homepage",
        "events": "all",
        "x": 930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "d5c1add6ae736653",
        "type": "ui_toast",
        "z": "dce026e34c11868c",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 930,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "f02a4c735690bc56",
        "type": "comment",
        "z": "dce026e34c11868c",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 440,
        "wires": []
    },
    {
        "id": "48cfda55c7a3cc2e",
        "type": "ui_button",
        "z": "dce026e34c11868c",
        "name": "Logout",
        "group": "8f723c0be1f93bcd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "3e313b4dd9a1753a"
            ]
        ]
    },
    {
        "id": "01b120f932070ce7",
        "type": "inject",
        "z": "dce026e34c11868c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "3da49d3d1324f4f2",
                "58e58b31db77589c"
            ]
        ]
    },
    {
        "id": "3e313b4dd9a1753a",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "b4e06ef7ec95391b"
            ]
        ]
    },
    {
        "id": "b4e06ef7ec95391b",
        "type": "ui_ui_control",
        "z": "dce026e34c11868c",
        "name": "Logout",
        "events": "all",
        "x": 470,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b99b5518d904a5ac",
        "type": "comment",
        "z": "dce026e34c11868c",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 160,
        "y": 720,
        "wires": []
    },
    {
        "id": "7284dab92abd3933",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?id=1580578&appid=bdc87536ce16f695eea1f63159c980f5&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "48eab450db7cc46e"
            ]
        ]
    },
    {
        "id": "97303605fbb89836",
        "type": "inject",
        "z": "dce026e34c11868c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "7284dab92abd3933"
            ]
        ]
    },
    {
        "id": "48eab450db7cc46e",
        "type": "json",
        "z": "dce026e34c11868c",
        "name": "temp",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "9b332289a4d6a2ef",
                "e55bc1a06819e86e"
            ]
        ]
    },
    {
        "id": "00b5bb5baaf907ae",
        "type": "inject",
        "z": "dce026e34c11868c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "0e57e24ffa622b6e"
            ]
        ]
    },
    {
        "id": "0e57e24ffa622b6e",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=11K54XX95HWOFJD1&field1=27",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "e55bc1a06819e86e"
            ]
        ]
    },
    {
        "id": "e55bc1a06819e86e",
        "type": "debug",
        "z": "dce026e34c11868c",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "9b332289a4d6a2ef",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "function 5",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ed7d9592f6d805b9",
        "type": "comment",
        "z": "dce026e34c11868c",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 130,
        "y": 960,
        "wires": []
    },
    {
        "id": "3956c93e53d0c618",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Mở/khóa cửa",
        "func": "if (msg.payload == \"true\")\n{\n    msg.payload = \"on\"\n}\nelse{\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "3e759cabff49cb25",
                "8c27585f893540d9"
            ]
        ]
    },
    {
        "id": "3e759cabff49cb25",
        "type": "mqtt out",
        "z": "dce026e34c11868c",
        "name": "",
        "topic": "/22127344/DoorControl",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1fafc09964ec5a6f",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "26a0342616637a0b",
        "type": "mqtt in",
        "z": "dce026e34c11868c",
        "name": "",
        "topic": "SmartLock/In",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "8b851cd1cdf5d37d"
            ]
        ]
    },
    {
        "id": "8b851cd1cdf5d37d",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Get Temp and humid",
        "func": "var p = msg.payload\nmsg.payload = []\n\nconst arr = [p.temp,p.humid]\nflow.set(\"temp\", arr[0])\nflow.set(\"humid\", arr[1])\n\nmsg.payload.push(arr[0])\nmsg.payload.push(arr[1]) \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "f9599ee048f37588"
            ]
        ]
    },
    {
        "id": "5101d22c1d3718dd",
        "type": "ui_gauge",
        "z": "dce026e34c11868c",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{msg.temp}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": []
    },
    {
        "id": "b2debbc6b371cc32",
        "type": "ui_gauge",
        "z": "dce026e34c11868c",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{msg.humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1400,
        "wires": []
    },
    {
        "id": "7b5431feb2e4d783",
        "type": "comment",
        "z": "dce026e34c11868c",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "03b4aed04055b526",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "2759962549bcb87e",
                "19a0d38db7762e29"
            ]
        ]
    },
    {
        "id": "f9599ee048f37588",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "03b4aed04055b526",
                "5101d22c1d3718dd",
                "b2debbc6b371cc32"
            ]
        ]
    },
    {
        "id": "19a0d38db7762e29",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1240,
        "wires": [
            [
                "714f580ba4a78f96"
            ]
        ]
    },
    {
        "id": "714f580ba4a78f96",
        "type": "json",
        "z": "dce026e34c11868c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1240,
        "wires": [
            [
                "08a66c3e4a9caec4"
            ]
        ]
    },
    {
        "id": "08a66c3e4a9caec4",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n// msg.payload = field1Values[field1Values.length - 1];\nvar latestValues = field1Values.slice(-10);\nmsg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "db4c77fe5e6cfeb8"
            ]
        ]
    },
    {
        "id": "db4c77fe5e6cfeb8",
        "type": "ui_chart",
        "z": "dce026e34c11868c",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "2759962549bcb87e",
        "type": "http request",
        "z": "dce026e34c11868c",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "48645bdf7419295f"
            ]
        ]
    },
    {
        "id": "48645bdf7419295f",
        "type": "json",
        "z": "dce026e34c11868c",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1320,
        "wires": [
            [
                "9dc37e429ead2fd2"
            ]
        ]
    },
    {
        "id": "9dc37e429ead2fd2",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\nvar latestValues = field2Values.slice(-10);\nmsg.payload = latestValues;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "d46386e66eced28c"
            ]
        ]
    },
    {
        "id": "d46386e66eced28c",
        "type": "ui_chart",
        "z": "dce026e34c11868c",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "46caefc80fde0131",
        "type": "ui_switch",
        "z": "dce026e34c11868c",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "3956c93e53d0c618"
            ]
        ]
    },
    {
        "id": "8c27585f893540d9",
        "type": "debug",
        "z": "dce026e34c11868c",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e438dfef0a2d8c18",
        "type": "ui_form",
        "z": "dce026e34c11868c",
        "name": "Sign in",
        "label": "",
        "group": "9f111a7e1b7caa2d",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "2a4813ccebe06453",
                "5e8403aa917a4b8f"
            ]
        ]
    },
    {
        "id": "bdd26538fb493199",
        "type": "ui_button",
        "z": "dce026e34c11868c",
        "name": "Button to sign in",
        "group": "f8864be9c8fccaeb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign in",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "e802264b4a674f09"
            ]
        ]
    },
    {
        "id": "e802264b4a674f09",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "sign in",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "8edcb609bfc290a7"
            ]
        ]
    },
    {
        "id": "8edcb609bfc290a7",
        "type": "ui_ui_control",
        "z": "dce026e34c11868c",
        "name": "To login",
        "events": "all",
        "x": 640,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "2a4813ccebe06453",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "Set sign in",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "5e8403aa917a4b8f",
        "type": "function",
        "z": "dce026e34c11868c",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "31aed9efe3de4972"
            ]
        ]
    },
    {
        "id": "31aed9efe3de4972",
        "type": "ui_ui_control",
        "z": "dce026e34c11868c",
        "name": "End sign in",
        "events": "all",
        "x": 1090,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "279ba32bce3fc8ca",
        "type": "inject",
        "z": "dce026e34c11868c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\": \"anhquan\"}",
        "payloadType": "json",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "71c97ea424581cf9"
            ]
        ]
    },
    {
        "id": "91dc42ad0f9f1633",
        "type": "debug",
        "z": "dce026e34c11868c",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "71c97ea424581cf9",
        "type": "mongodb3 in",
        "z": "dce026e34c11868c",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 1150,
        "y": 620,
        "wires": [
            [
                "91dc42ad0f9f1633"
            ]
        ]
    },
    {
        "id": "b00512fc34e68298",
        "type": "ui_form",
        "z": "9f8951a2a6b0f73a",
        "name": "Login",
        "label": "",
        "group": "f8864be9c8fccaeb",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "9665160757961095"
            ]
        ]
    },
    {
        "id": "0cfc90325c819a39",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\nvar dbuser = msg.payload.dbuser  \nvar dbpass = msg.payload.dbpass\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (dbuser != undefined && dbpass != undefined){\nif (username ==dbuser && password == dbpass )\n{\n    msg.payload = 0;\n}\n}\nreturn msg;\n\n// if (username == flow.get(\"user\"))\n// {\n//     if (password == flow.get(\"pass\"))\n//     {\n//         msg.payload = 0;\n//     }\n// }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "3c59bbcd09198030",
                "3be2362f58d4e41e"
            ]
        ]
    },
    {
        "id": "3c59bbcd09198030",
        "type": "switch",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "4c0c22333ee1bfe1"
            ],
            [
                "8a583a810f87cbd8"
            ]
        ]
    },
    {
        "id": "4c0c22333ee1bfe1",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "85677d4dd659b0fe"
            ]
        ]
    },
    {
        "id": "8a583a810f87cbd8",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "29e32a3d14f71d61"
            ]
        ]
    },
    {
        "id": "85677d4dd659b0fe",
        "type": "ui_ui_control",
        "z": "9f8951a2a6b0f73a",
        "name": "Homepage",
        "events": "all",
        "x": 1190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "29e32a3d14f71d61",
        "type": "ui_toast",
        "z": "9f8951a2a6b0f73a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 1190,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "7c510d16ca47c11d",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 300,
        "wires": []
    },
    {
        "id": "0ee42eaf721b0e1a",
        "type": "ui_button",
        "z": "9f8951a2a6b0f73a",
        "name": "Logout",
        "group": "8f723c0be1f93bcd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "ad62330ba5e43bbc"
            ]
        ]
    },
    {
        "id": "ad62330ba5e43bbc",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "f727443704b04fb0"
            ]
        ]
    },
    {
        "id": "f727443704b04fb0",
        "type": "ui_ui_control",
        "z": "9f8951a2a6b0f73a",
        "name": "Logout",
        "events": "all",
        "x": 590,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "6787d6a2eff174cc",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "1fff9b9889e773d5",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 110,
        "y": 880,
        "wires": []
    },
    {
        "id": "7e0ecdcfa40cd8b3",
        "type": "mqtt in",
        "z": "9f8951a2a6b0f73a",
        "name": "Push sensor values",
        "topic": "/SmartLock/Sensor/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "d48013a10609bac0",
                "e1e1b050b1badc83"
            ]
        ]
    },
    {
        "id": "d48013a10609bac0",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Get Temp and humid",
        "func": "// var p = msg.payload\n// msg.payload = []\n\n// const arr = [p.temp,p.humid]\n// flow.set(\"temp\", arr[0])\n// flow.set(\"humid\", arr[1])\n\n// msg.payload.push(arr[0])\n// msg.payload.push(arr[1]) \n\n// return msg;\n\n\nvar p = msg.payload;\n\n// Split the payload string into an array using the delimiter (comma in this case)\nvar values = p.split(',');\n\nmsg.payload = {\n    \"temp\": parseFloat(values[0]),   // Temperature\n    \"humid\": parseFloat(values[1])   // Humidity\n};\n\n// Store the values if needed\nflow.set(\"temp\", msg.payload.temp);\nflow.set(\"humid\", msg.payload.humid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "6b65750689ea105b"
            ]
        ]
    },
    {
        "id": "6228c8688360c5a9",
        "type": "ui_gauge",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{temp}}",
        "min": "-30",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1200,
        "wires": []
    },
    {
        "id": "d4b14a135403f707",
        "type": "ui_gauge",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "759025837acceae9",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1180,
        "wires": []
    },
    {
        "id": "d142358f4fa7051c",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1300,
        "wires": [
            [
                "5b539ea7e02d6e77",
                "d57c831e85c44fec"
            ]
        ]
    },
    {
        "id": "6b65750689ea105b",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "d142358f4fa7051c",
                "6228c8688360c5a9",
                "d4b14a135403f707",
                "7a2fc9940431df18"
            ]
        ]
    },
    {
        "id": "d57c831e85c44fec",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "771987b95fc49422"
            ]
        ]
    },
    {
        "id": "771987b95fc49422",
        "type": "json",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "9db72e1d23941af9"
            ]
        ]
    },
    {
        "id": "9db72e1d23941af9",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    let feed = msg.payload.feeds[i];\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\nfor (let i in field1Values ){\n    msg.payload = field1Values[i]\n}\n// msg.payload = field1Values\n// var latestValues = field1Values.slice(-10);\n// msg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1260,
        "wires": [
            [
                "862a9db37fbe2232",
                "4f756fc0f44ac8f7"
            ]
        ]
    },
    {
        "id": "4f756fc0f44ac8f7",
        "type": "ui_chart",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "5b539ea7e02d6e77",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1320,
        "wires": [
            [
                "bdc872bd6ae03b74"
            ]
        ]
    },
    {
        "id": "bdc872bd6ae03b74",
        "type": "json",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1320,
        "wires": [
            [
                "c557589fe8d7f12b"
            ]
        ]
    },
    {
        "id": "c557589fe8d7f12b",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\n// var latestValues = field2Values.slice(-10);\n// msg.payload = latestValues;\n// msg.payload = field2Values[field2Values.length - 1];\nfor (let i in field2Values) {\n    msg.payload = field2Values[i]\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "3d63454073847d47"
            ]
        ]
    },
    {
        "id": "3d63454073847d47",
        "type": "ui_chart",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "8a445ae8980f3306",
        "type": "ui_form",
        "z": "9f8951a2a6b0f73a",
        "name": "Sign up",
        "label": "",
        "group": "9f111a7e1b7caa2d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "fce14997e1b8bb16"
            ]
        ]
    },
    {
        "id": "7fa7231105ae3e71",
        "type": "ui_button",
        "z": "9f8951a2a6b0f73a",
        "name": "Tap to sign in",
        "group": "f8864be9c8fccaeb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "c02e90110d6c6784"
            ]
        ]
    },
    {
        "id": "c02e90110d6c6784",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "sign up",
        "func": "msg.payload = {\n    //     tabs:{\n        \n    //     hide: [\"Smart locker LOL tracking\",\"About\"]\n    // },\n    // tabs:{\n    //     show: [\"Login\", \"Smart locker LOL tracking\"]\n    // },\n   tabs:{\n    hide: [\"Smart locker LOL tracking\"]\n   },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 740,
        "wires": [
            [
                "66985e96d7808cb8"
            ]
        ]
    },
    {
        "id": "66985e96d7808cb8",
        "type": "ui_ui_control",
        "z": "9f8951a2a6b0f73a",
        "name": "To sign up",
        "events": "all",
        "x": 590,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "fce14997e1b8bb16",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Set sign up",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nmsg.payload = {\n    username: user,\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "72c2323939cbbf86"
            ]
        ]
    },
    {
        "id": "645c719971e7c4c4",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 80,
        "wires": [
            [
                "bcc57e5c4c0cd055"
            ]
        ]
    },
    {
        "id": "bcc57e5c4c0cd055",
        "type": "ui_ui_control",
        "z": "9f8951a2a6b0f73a",
        "name": "End sign up",
        "events": "all",
        "x": 1150,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "14c3d1642fadf0e1",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 180,
        "wires": []
    },
    {
        "id": "e1e1b050b1badc83",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f6c2eccb2925250e",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "Trigger push nofi from PushSafer",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=qDJi4rt2kNLkOOzwheFx&m=Nhi%E1%BB%87t%20%C4%91%E1%BB%99%20hi%E1%BB%87n%20t%E1%BA%A1i%20l%C3%A0%C2%A0{{ payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1200,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "8708952bbb175872",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Lấy dữ liệu nhiệt độ và gửi về điện thoại",
        "func": "msg.payload = flow.get(\"temp\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "020c14939bfd2d07"
            ]
        ]
    },
    {
        "id": "e8607c6ff57538da",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Truyền thông báo về điện thoại và website",
        "info": "",
        "x": 840,
        "y": 1000,
        "wires": []
    },
    {
        "id": "0424459427bb28eb",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Thẻ từ",
        "info": "",
        "x": 60,
        "y": 2420,
        "wires": []
    },
    {
        "id": "5f62731d560db17a",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Thông báo lịch sử",
        "info": "",
        "x": 100,
        "y": 2240,
        "wires": []
    },
    {
        "id": "b4b93507b047b40a",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Mở tắt cảm biến",
        "info": "",
        "x": 90,
        "y": 2640,
        "wires": []
    },
    {
        "id": "3ac87de7d4772935",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Lấy dữ liệu và gửi về email",
        "func": "msg.topic = 'NOTIFICATION ALERT'\nvar temp = flow.get(\"temp\")\nmsg.payload = 'CẢNH BÁO: Nhiệt độ hiện tại là ' +temp + ' lớn hơn 70°C, tự động mở khóa cửa'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1140,
        "wires": [
            [
                "020c14939bfd2d07"
            ]
        ]
    },
    {
        "id": "7a2fc9940431df18",
        "type": "switch",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "temp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "70",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "8708952bbb175872",
                "3ac87de7d4772935"
            ]
        ]
    },
    {
        "id": "91ad7a1f7b9a1058",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Lưu trữ dữ liệu cảm biến lên cloud ThingSpeak",
        "info": "",
        "x": 880,
        "y": 1220,
        "wires": []
    },
    {
        "id": "10a90a8c51866854",
        "type": "ui_switch",
        "z": "9f8951a2a6b0f73a",
        "name": "Bật/tắt cảm biến",
        "label": "switch",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 100,
        "y": 1000,
        "wires": [
            [
                "bd9a132a7e010ae8"
            ]
        ]
    },
    {
        "id": "bd9a132a7e010ae8",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Mở/tắt cảm biến",
        "func": "if (msg.payload == \"true\") {\n    msg.payload = \"on\"\n}\nelse {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "0fff22ded6bce09c",
        "type": "ui_switch",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 90,
        "y": 920,
        "wires": [
            [
                "32411ea091ec3c9c"
            ]
        ]
    },
    {
        "id": "32411ea091ec3c9c",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Mở/khóa cửa",
        "func": "//Khóa\nif (msg.payload == \"true\")\n{\n    msg.payload = \"Door locked\"\n}\n//Mở\nelse{\n    msg.payload = \"Door open\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "70cb95a9386069e8",
                "648f77a4546a9bc7",
                "cb9f4e72b20cfbf9",
                "3c11ca81eaee0518"
            ]
        ]
    },
    {
        "id": "70cb95a9386069e8",
        "type": "mqtt out",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "topic": "/SmartLock/Control/DoorControl",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "648f77a4546a9bc7",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 820,
        "wires": []
    },
    {
        "id": "cb9f4e72b20cfbf9",
        "type": "ui_text",
        "z": "9f8951a2a6b0f73a",
        "group": "5ce9ee3403a8972c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Trạng thái cửa",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 860,
        "wires": []
    },
    {
        "id": "020c14939bfd2d07",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1080,
        "wires": []
    },
    {
        "id": "9665160757961095",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Set infor from form",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "0da14f9c0bc0f37a"
            ]
        ]
    },
    {
        "id": "7a9fb4ad8efaea33",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Set info from db",
        "func": "msg.payload.dbuser = msg.payload.username\nmsg.payload.dbpass = msg.payload.password\nmsg.payload.id = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 360,
        "wires": [
            [
                "0cfc90325c819a39"
            ]
        ]
    },
    {
        "id": "3be2362f58d4e41e",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 400,
        "wires": []
    },
    {
        "id": "dfe5f5a4a2823289",
        "type": "mqtt in",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "topic": "/SmartLock/RFID",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 2480,
        "wires": [
            [
                "75a6072befa49831",
                "21d36c6b7641e1fb"
            ]
        ]
    },
    {
        "id": "ad512f7b93e3b306",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "30e52e134bf4f7c5",
        "type": "ui_button",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "group": "9f111a7e1b7caa2d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "b1cc35f4761d2226"
            ]
        ]
    },
    {
        "id": "b1cc35f4761d2226",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "To login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 560,
        "wires": [
            [
                "bf5edef757763dba"
            ]
        ]
    },
    {
        "id": "bf5edef757763dba",
        "type": "ui_ui_control",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "3c11ca81eaee0518",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field3={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d05df62cd3a88618",
        "type": "http request",
        "z": "9f8951a2a6b0f73a",
        "name": "History",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/3.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 2280,
        "wires": [
            [
                "20d2d3c8cdd14210"
            ]
        ]
    },
    {
        "id": "20d2d3c8cdd14210",
        "type": "json",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 520,
        "y": 2280,
        "wires": [
            [
                "02b824334d14ac26",
                "663fce66de4a6035"
            ]
        ]
    },
    {
        "id": "02b824334d14ac26",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 8",
        "func": "let latestMessages = [];\n\n// Loop through the feeds array to extract the required fields\nfor (let i = 0; i < msg.payload.feeds.length; i++) {\n     if (msg.payload.feeds[i].field3 === 'Door locked' \n     || msg.payload.feeds[i].field3 === 'Door open'){ \n        let feed = msg.payload.feeds[i];\n        let date = new Date(feed.created_at);\n        let gmt7Date = new Date(date.getTime() + 7 * 60 * 60 * 1000); // Add 7 hours\n\n         // Format the adjusted date back to ISO format\n        let formattedDate = gmt7Date.toISOString().replace('T', ' ').substring(0, 19);\n    latestMessages.push({\n        \"Created_at\": formattedDate,\n        \"Status\": feed.field3\n    });}\n}\n\n// Set the latestMessages array to msg.payload for further processing\nmsg.payload = latestMessages;\n\n// Return the modified msg object\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "75a6072befa49831",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "1c07fbd17d04830f",
        "type": "ui_button",
        "z": "9f8951a2a6b0f73a",
        "name": "Update",
        "group": "12111436f1e3fc07",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update cloud's history",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2280,
        "wires": [
            [
                "d05df62cd3a88618"
            ]
        ]
    },
    {
        "id": "862a9db37fbe2232",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1280,
        "wires": []
    },
    {
        "id": "cec80c89e0dddc28",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Đăng ký",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "d5de8ba39639ac2e",
        "type": "comment",
        "z": "9f8951a2a6b0f73a",
        "name": "Điều hướng người dùng",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "79121469e5cfe8ac",
        "type": "change",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.id",
                "pt": "msg",
                "to": "x",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "7ec4d064c2a40648",
                "7c5ddea4aa727771"
            ]
        ]
    },
    {
        "id": "7ec4d064c2a40648",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 280,
        "wires": []
    },
    {
        "id": "7c5ddea4aa727771",
        "type": "mqtt out",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "topic": "SmartLock/RFID/Accessed",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "cd4c07e098324999",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 9",
        "func": "var sign_up_username = msg.payload.username\n\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\n// Nếu tên tìm thấy => failed\nif (sign_up_username != undefined) { \n    msg.payload = 0;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            [
                "3ee2ac55a1a9f1b4"
            ]
        ]
    },
    {
        "id": "3ee2ac55a1a9f1b4",
        "type": "switch",
        "z": "9f8951a2a6b0f73a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 60,
        "wires": [
            [
                "6e01edc19cf83459"
            ],
            [
                "645c719971e7c4c4",
                "bc5f38fceabf97b8",
                "f582e1055f8aeebd"
            ]
        ]
    },
    {
        "id": "b35470484ee6d362",
        "type": "ui_toast",
        "z": "9f8951a2a6b0f73a",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng ký thất bại",
        "name": "Failed Notification",
        "x": 1170,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "6e01edc19cf83459",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Failed noti",
        "func": "msg.payload = \"Đăng ký không thành công vì đã có tài khoản này.\\n Hãy thử đăng nhập!\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 40,
        "wires": [
            [
                "b35470484ee6d362"
            ]
        ]
    },
    {
        "id": "f582e1055f8aeebd",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 10",
        "func": "msg.payload = \"Đăng ký thành công\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 120,
        "wires": [
            [
                "0a46329c1ac850e9"
            ]
        ]
    },
    {
        "id": "e973f267db3aa724",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "bc5f38fceabf97b8",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "Get account's data",
        "func": "var user = flow.get(\"user\")\nvar pass = flow.get(\"pass\")\n\nmsg.payload = {\n    username: user,\n    password: pass\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "e973f267db3aa724",
                "f0f88ff067c686d6"
            ]
        ]
    },
    {
        "id": "0a46329c1ac850e9",
        "type": "ui_toast",
        "z": "9f8951a2a6b0f73a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "663fce66de4a6035",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "21d36c6b7641e1fb",
        "type": "function",
        "z": "9f8951a2a6b0f73a",
        "name": "function 11",
        "func": "//  var id = 66c6036974ba516a448ee027\n// var id = ObjectID(66c6036974ba516a448ee027)\n// msg._id = {_id: '66c6036974ba516a448ee027'}\nmsg.payload= {\n   _id:\"66c6036974ba516a448ee027\"\n }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2440,
        "wires": [
            [
                "d81fc6d032c07714"
            ]
        ]
    },
    {
        "id": "1a3558f91bf6b36a",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2440,
        "wires": []
    },
    {
        "id": "d81fc6d032c07714",
        "type": "debug",
        "z": "9f8951a2a6b0f73a",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2400,
        "wires": []
    },
    {
        "id": "f0f88ff067c686d6",
        "type": "mongodb3 in",
        "z": "9f8951a2a6b0f73a",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "Insert accounts to DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 700,
        "y": 180,
        "wires": [
            [
                "14c3d1642fadf0e1"
            ]
        ]
    },
    {
        "id": "0da14f9c0bc0f37a",
        "type": "mongodb3 in",
        "z": "9f8951a2a6b0f73a",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "7a9fb4ad8efaea33",
                "ad512f7b93e3b306",
                "79121469e5cfe8ac"
            ]
        ]
    },
    {
        "id": "72c2323939cbbf86",
        "type": "mongodb3 in",
        "z": "9f8951a2a6b0f73a",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 490,
        "y": 20,
        "wires": [
            [
                "cd4c07e098324999"
            ]
        ]
    },
    {
        "id": "85452ea3d179301c",
        "type": "mongodb3 in",
        "z": "9f8951a2a6b0f73a",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 710,
        "y": 2440,
        "wires": [
            [
                "1a3558f91bf6b36a"
            ]
        ]
    },
    {
        "id": "b03d4de2b7575b6b",
        "type": "mqtt in",
        "z": "46e34e34787215c0",
        "name": "",
        "topic": "/wateringTKMQ/temp",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "5d4133c9155fdfa4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 60,
        "wires": [
            [
                "60525213f4073b92",
                "6792e62bf422132e"
            ]
        ]
    },
    {
        "id": "60525213f4073b92",
        "type": "debug",
        "z": "46e34e34787215c0",
        "name": "debug temperature",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 430,
        "y": 40,
        "wires": []
    },
    {
        "id": "6792e62bf422132e",
        "type": "ui_gauge",
        "z": "46e34e34787215c0",
        "name": "",
        "group": "a8fb29437dafb52b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temperature",
        "label": "units",
        "format": "{{value}}",
        "min": "0",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "20",
        "seg2": "40",
        "diff": false,
        "className": "",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "9fda2c65772adf0e",
        "type": "mqtt in",
        "z": "46e34e34787215c0",
        "name": "",
        "topic": "/wateringTKMQ/humid",
        "qos": "0",
        "datatype": "auto-detect",
        "broker": "5d4133c9155fdfa4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "903f141b1ddf6cf9",
                "e3d6250be763dcd1"
            ]
        ]
    },
    {
        "id": "903f141b1ddf6cf9",
        "type": "debug",
        "z": "46e34e34787215c0",
        "name": "debug humidity",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 240,
        "wires": []
    },
    {
        "id": "e3d6250be763dcd1",
        "type": "ui_gauge",
        "z": "46e34e34787215c0",
        "name": "",
        "group": "a8fb29437dafb52b",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humidity",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "50",
        "seg2": "70",
        "diff": false,
        "className": "",
        "x": 420,
        "y": 300,
        "wires": []
    },
    {
        "id": "8e6fb80e84214821",
        "type": "http request",
        "z": "46e34e34787215c0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?id=1580578&appid=bdc87536ce16f695eea1f63159c980f5&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 290,
        "y": 380,
        "wires": [
            [
                "3c48b1a2efdbad2b"
            ]
        ]
    },
    {
        "id": "a7055636b59f1990",
        "type": "inject",
        "z": "46e34e34787215c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 380,
        "wires": [
            [
                "8e6fb80e84214821"
            ]
        ]
    },
    {
        "id": "3c48b1a2efdbad2b",
        "type": "json",
        "z": "46e34e34787215c0",
        "name": "temp",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 470,
        "y": 480,
        "wires": [
            [
                "3136cd495f3acb6b",
                "885629618b47bbb9"
            ]
        ]
    },
    {
        "id": "38f295e7dec1cee6",
        "type": "inject",
        "z": "46e34e34787215c0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 80,
        "y": 520,
        "wires": [
            [
                "789b7a5d7c9ec197"
            ]
        ]
    },
    {
        "id": "789b7a5d7c9ec197",
        "type": "http request",
        "z": "46e34e34787215c0",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=11K54XX95HWOFJD1&field1=27",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 270,
        "y": 540,
        "wires": [
            [
                "885629618b47bbb9"
            ]
        ]
    },
    {
        "id": "885629618b47bbb9",
        "type": "debug",
        "z": "46e34e34787215c0",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 540,
        "wires": []
    },
    {
        "id": "3136cd495f3acb6b",
        "type": "function",
        "z": "46e34e34787215c0",
        "name": "function 8",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "089c9d982cfa2bfa",
        "type": "ui_button",
        "z": "46e34e34787215c0",
        "name": "Logout",
        "group": "a8fb29437dafb52b",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 70,
        "y": 660,
        "wires": [
            [
                "75038e493769e24b"
            ]
        ]
    },
    {
        "id": "75038e493769e24b",
        "type": "function",
        "z": "46e34e34787215c0",
        "name": "Logout",
        "func": "msg.payload = {\n    \"tab\": \"LogInTab\"\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 660,
        "wires": [
            [
                "a7c74af764336bd6"
            ]
        ]
    },
    {
        "id": "a7c74af764336bd6",
        "type": "ui_ui_control",
        "z": "46e34e34787215c0",
        "name": "Logout",
        "events": "all",
        "x": 450,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "bea6584a1d4e2c12",
        "type": "ui_form",
        "z": "959713e9ef15b33a",
        "name": "",
        "label": "Sign Up",
        "group": "d5c436054d988ce9",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Name",
                "value": "Name",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Username",
                "value": "Username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "Password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Confirm Password",
                "value": "ConfirmPassword",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Name": "",
            "Username": "",
            "Password": "",
            "ConfirmPassword": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 60,
        "y": 100,
        "wires": [
            [
                "6347809cd2d198a3",
                "b68e62e5d7b3b602"
            ]
        ]
    },
    {
        "id": "6347809cd2d198a3",
        "type": "debug",
        "z": "959713e9ef15b33a",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 180,
        "y": 20,
        "wires": []
    },
    {
        "id": "ecd7d1b4d5e23c09",
        "type": "change",
        "z": "959713e9ef15b33a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"tabs\":{\t        \"hide\":[\t            \"Home\",\t            \"LogInTab\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 260,
        "wires": [
            [
                "df030a2fed7f4f92"
            ]
        ]
    },
    {
        "id": "a1631bd26fce7129",
        "type": "ui_ui_control",
        "z": "959713e9ef15b33a",
        "name": "",
        "events": "all",
        "x": 860,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "df030a2fed7f4f92",
        "type": "change",
        "z": "959713e9ef15b33a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"tab\":\t    \"Home\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 260,
        "wires": [
            [
                "a1631bd26fce7129"
            ]
        ]
    },
    {
        "id": "b68e62e5d7b3b602",
        "type": "function",
        "z": "959713e9ef15b33a",
        "name": "Nhap' nhu da co mongoDB",
        "func": "if (msg.payload.Password === msg.payload.ConfirmPassword) {\n    msg.payload = {\n        Password: msg.payload.Password,\n        Name: msg.payload.Name,\n        Username: msg.payload.Username\n    };\n    return msg;\n} else {\n    return null; // Stops the flow if passwords do not match\n}\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 180,
        "wires": [
            [
                "841ca953d24a1d11",
                "2d42c1cb42f54015"
            ],
            [
                "841ca953d24a1d11"
            ]
        ]
    },
    {
        "id": "ed7185e48d2a4f41",
        "type": "comment",
        "z": "959713e9ef15b33a",
        "name": "Cần chỗ để lưu data cho sign up",
        "info": "",
        "x": 750,
        "y": 140,
        "wires": []
    },
    {
        "id": "841ca953d24a1d11",
        "type": "ui_toast",
        "z": "959713e9ef15b33a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 570,
        "y": 60,
        "wires": []
    },
    {
        "id": "ab48fd501d6b4d0b",
        "type": "ui_button",
        "z": "959713e9ef15b33a",
        "name": "",
        "group": "d5c436054d988ce9",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button switch to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 380,
        "wires": [
            [
                "35e2f092fc8733f7"
            ]
        ]
    },
    {
        "id": "35e2f092fc8733f7",
        "type": "function",
        "z": "959713e9ef15b33a",
        "name": "sign in",
        "func": "msg.payload = {\n    \"tab\": \"LogInTab\"\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 380,
        "wires": [
            [
                "c9ded74cfb063ae8"
            ]
        ]
    },
    {
        "id": "c9ded74cfb063ae8",
        "type": "ui_ui_control",
        "z": "959713e9ef15b33a",
        "name": "To login",
        "events": "all",
        "x": 520,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2d42c1cb42f54015",
        "type": "mongodb3 in",
        "z": "959713e9ef15b33a",
        "service": "_ext_",
        "configNode": "d502d27466fdea61",
        "name": "db",
        "collection": "juinkinn",
        "operation": "insertOne",
        "x": 510,
        "y": 180,
        "wires": [
            [
                "ecd7d1b4d5e23c09"
            ]
        ]
    },
    {
        "id": "aab6ff4ce2559514",
        "type": "ui_form",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "label": "Log In",
        "group": "8e6bc74c871db5e8",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "Username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "Password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "Username": "",
            "Password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 50,
        "y": 120,
        "wires": [
            [
                "900dfe2b223b3d45",
                "de0f145996ea47f8"
            ]
        ]
    },
    {
        "id": "900dfe2b223b3d45",
        "type": "debug",
        "z": "b1a5ea6e5b62011a",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 120,
        "wires": []
    },
    {
        "id": "5923e49aec5a30fd",
        "type": "ui_ui_control",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "events": "all",
        "x": 820,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "4b2a13cb5c5b8fd3",
        "type": "ui_toast",
        "z": "b1a5ea6e5b62011a",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 830,
        "y": 220,
        "wires": []
    },
    {
        "id": "89e6b6651ad21fe9",
        "type": "comment",
        "z": "b1a5ea6e5b62011a",
        "name": "cần mongoDB lưu data login thay thế cho function ở trên",
        "info": "",
        "x": 530,
        "y": 380,
        "wires": []
    },
    {
        "id": "54d9003b9dc92d0f",
        "type": "function",
        "z": "b1a5ea6e5b62011a",
        "name": "Success",
        "func": "var dbuser = msg.payload.dbUser;\nvar dbpass = msg.payload.dbPass;\n\n// Extract input password\nvar inputPassword = msg.payload.Password;\nvar inputUser = msg.payload.Username;\nmsg.payload = 0; // Initialize to 0 before checking\n\n// Check if user exists and validate credentials\nif (dbuser !== undefined && dbpass !== undefined) {\n    if (inputPassword === dbpass && inputUser === dbuser) {\n        msg.payload = 1; // Set to 1 for success\n    }\n} else { // User not found\n    msg.payload = 0; // Set to 0 if no user found or invalid credentials\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 220,
        "wires": [
            [
                "91557df1313a148f"
            ]
        ]
    },
    {
        "id": "77b67398f5ec2081",
        "type": "ui_button",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "group": "8e6bc74c871db5e8",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "button switch to sign up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "bf9882ee297cf9f8"
            ]
        ]
    },
    {
        "id": "bf9882ee297cf9f8",
        "type": "function",
        "z": "b1a5ea6e5b62011a",
        "name": "sign in",
        "func": "msg.payload = {\n    \"tab\": \"SignUpTab\"\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 440,
        "wires": [
            [
                "2dea4ad1454c15b0"
            ]
        ]
    },
    {
        "id": "2dea4ad1454c15b0",
        "type": "ui_ui_control",
        "z": "b1a5ea6e5b62011a",
        "name": "To signup",
        "events": "all",
        "x": 480,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "de0f145996ea47f8",
        "type": "mongodb3 in",
        "z": "b1a5ea6e5b62011a",
        "service": "_ext_",
        "configNode": "d502d27466fdea61",
        "name": "db",
        "collection": "juinkinn",
        "operation": "findOne",
        "x": 330,
        "y": 220,
        "wires": [
            [
                "131c5e69c219de7a",
                "350ce786e9fcb6ea"
            ]
        ]
    },
    {
        "id": "91557df1313a148f",
        "type": "switch",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 160,
        "wires": [
            [
                "ba721567e2f165e1"
            ],
            [
                "4b2a13cb5c5b8fd3"
            ]
        ]
    },
    {
        "id": "ba721567e2f165e1",
        "type": "change",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"tabs\":{\t        \"hide\":[\t            \"Home\",\t            \"LogInTab\"\t        ]\t    }\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 60,
        "wires": [
            [
                "55e94ea97f220c04"
            ]
        ]
    },
    {
        "id": "55e94ea97f220c04",
        "type": "change",
        "z": "b1a5ea6e5b62011a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t    \"tab\":\t    \"Home\"\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 60,
        "wires": [
            [
                "5923e49aec5a30fd"
            ]
        ]
    },
    {
        "id": "350ce786e9fcb6ea",
        "type": "function",
        "z": "b1a5ea6e5b62011a",
        "name": "function 17",
        "func": "msg.payload.dbPass = msg.payload.Password;\nmsg.payload.dbName = msg.payload.Name;\nmsg.payload.dbUser = msg.payload.Username;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 160,
        "wires": [
            [
                "54d9003b9dc92d0f",
                "bc79f7bf25c590aa"
            ]
        ]
    },
    {
        "id": "bc79f7bf25c590aa",
        "type": "debug",
        "z": "b1a5ea6e5b62011a",
        "name": "debug 38",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 280,
        "wires": []
    },
    {
        "id": "131c5e69c219de7a",
        "type": "debug",
        "z": "b1a5ea6e5b62011a",
        "name": "debug 39",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 320,
        "wires": []
    },
    {
        "id": "f5bbc0b1e2fb1057",
        "type": "comment",
        "z": "eb4cba9eeaea9dad",
        "name": "Các nút bật tắt tính năng như trong báo cáo",
        "info": "",
        "x": 190,
        "y": 60,
        "wires": []
    },
    {
        "id": "999c2c2b5806dc87",
        "type": "ui_toast",
        "z": "eb4cba9eeaea9dad",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "41b84ece01dda111",
        "type": "ui_toast",
        "z": "eb4cba9eeaea9dad",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 180,
        "wires": []
    },
    {
        "id": "76a4d731af35fd36",
        "type": "ui_toast",
        "z": "eb4cba9eeaea9dad",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "2961b0be3e0bfd49",
        "type": "ui_toast",
        "z": "eb4cba9eeaea9dad",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 670,
        "y": 260,
        "wires": []
    },
    {
        "id": "bf79c17553ede716",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "Mở/tắt cảm biến",
        "func": "if (msg.payload == \"true\") {\n    msg.payload = \"on\"\n}\nelse {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "037b98791ad288ea",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "Mở/khóa cửa",
        "func": "//Khóa\nif (msg.payload == \"true\")\n{\n    msg.payload = \"Door locked\"\n}\n//Mở\nelse{\n    msg.payload = \"Door open\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 580,
        "wires": [
            [
                "e68e4ecefeff3588",
                "bf43c7bddecf28f0",
                "c0421e8fbdd8f416",
                "43b3a0c95548ee55"
            ]
        ]
    },
    {
        "id": "e68e4ecefeff3588",
        "type": "mqtt out",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "topic": "/SmartLock/Control/DoorControl",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 650,
        "y": 580,
        "wires": []
    },
    {
        "id": "bf43c7bddecf28f0",
        "type": "debug",
        "z": "eb4cba9eeaea9dad",
        "name": "debug 37",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 420,
        "y": 480,
        "wires": []
    },
    {
        "id": "c0421e8fbdd8f416",
        "type": "ui_text",
        "z": "eb4cba9eeaea9dad",
        "group": "5ce9ee3403a8972c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Trạng thái cửa",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 620,
        "y": 520,
        "wires": []
    },
    {
        "id": "43b3a0c95548ee55",
        "type": "http request",
        "z": "eb4cba9eeaea9dad",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field3={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 600,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b0d2f97f2c33cf11",
        "type": "ui_switch",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "label": "Hệ thống chính",
        "tooltip": "",
        "group": "ca4de4f1fbb01085",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "8352040215c980c0"
            ]
        ]
    },
    {
        "id": "8352040215c980c0",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "function 12",
        "func": "var msg1 = {};\nvar msg2 = {};\n\n// Check if the switch button sends true or false\nif (msg.payload === true) {\n    // If true, prepare a success notification\n    msg1.payload = \"Hệ thống chính is ON.\";\n    return [msg1, null]; // Send msg1 to output 1\n} else if (msg.payload === false) {\n    // If false, prepare a failure notification\n    msg2.payload = \"Hệ thống chính is OFF.\";\n    return [null, msg2]; // Send msg2 to output 2\n} else {\n    // If the payload is neither true nor false (unexpected case)\n    return null; // Do nothing\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 140,
        "wires": [
            [
                "999c2c2b5806dc87"
            ]
        ]
    },
    {
        "id": "cb67b46d9e2ed47c",
        "type": "ui_switch",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "label": "Tự động tưới cây",
        "tooltip": "",
        "group": "ca4de4f1fbb01085",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 180,
        "wires": [
            [
                "efb0b5c86ffd09d0"
            ]
        ]
    },
    {
        "id": "16109313faee93fd",
        "type": "ui_switch",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "label": "Thông báo người dùng",
        "tooltip": "",
        "group": "ca4de4f1fbb01085",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "ee41fc482c8e0956"
            ]
        ]
    },
    {
        "id": "f1119d4be7e12c26",
        "type": "ui_switch",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "label": "Tự động điều chỉnh môi trường",
        "tooltip": "",
        "group": "ca4de4f1fbb01085",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 150,
        "y": 260,
        "wires": [
            [
                "9af89eefb86ee7cf"
            ]
        ]
    },
    {
        "id": "efb0b5c86ffd09d0",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "function 13",
        "func": "var msg1 = {};\nvar msg2 = {};\n\n// Check if the switch button sends true or false\nif (msg.payload === true) {\n    // If true, prepare a success notification\n    msg1.payload = \"Tự động tưới cây is ON.\";\n    return [msg1, null]; // Send msg1 to output 1\n} else if (msg.payload === false) {\n    // If false, prepare a failure notification\n    msg2.payload = \"Tự động tưới cây is OFF.\";\n    return [null, msg2]; // Send msg2 to output 2\n} else {\n    // If the payload is neither true nor false (unexpected case)\n    return null; // Do nothing\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 180,
        "wires": [
            [
                "41b84ece01dda111"
            ]
        ]
    },
    {
        "id": "ee41fc482c8e0956",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "function 14",
        "func": "var msg1 = {};\nvar msg2 = {};\n\n// Check if the switch button sends true or false\nif (msg.payload === true) {\n    // If true, prepare a success notification\n    msg1.payload = \"Thông báo người dùng is ON.\";\n    return [msg1, null]; // Send msg1 to output 1\n} else if (msg.payload === false) {\n    // If false, prepare a failure notification\n    msg2.payload = \"Thông báo người dùng is OFF.\";\n    return [null, msg2]; // Send msg2 to output 2\n} else {\n    // If the payload is neither true nor false (unexpected case)\n    return null; // Do nothing\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 220,
        "wires": [
            [
                "76a4d731af35fd36"
            ]
        ]
    },
    {
        "id": "9af89eefb86ee7cf",
        "type": "function",
        "z": "eb4cba9eeaea9dad",
        "name": "function 15",
        "func": "var msg1 = {};\nvar msg2 = {};\n\n// Check if the switch button sends true or false\nif (msg.payload === true) {\n    // If true, prepare a success notification\n    msg1.payload = \"Tự động điều chỉnh môi trường is ON.\";\n    return [msg1, null]; // Send msg1 to output 1\n} else if (msg.payload === false) {\n    // If false, prepare a failure notification\n    msg2.payload = \"Tự động điều chỉnh môi trường is OFF.\";\n    return [null, msg2]; // Send msg2 to output 2\n} else {\n    // If the payload is neither true nor false (unexpected case)\n    return null; // Do nothing\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 260,
        "wires": [
            [
                "2961b0be3e0bfd49"
            ]
        ]
    },
    {
        "id": "79d0233c8e72285d",
        "type": "http request",
        "z": "eb4cba9eeaea9dad",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field3={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 740,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "f2de467c252ece6d",
        "type": "mqtt out",
        "z": "eb4cba9eeaea9dad",
        "name": "",
        "topic": "/SmartLock/Control/DoorControl",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 670,
        "y": 360,
        "wires": []
    },
    {
        "id": "a7f2f2ce3c024ed7",
        "type": "ui_text",
        "z": "eb4cba9eeaea9dad",
        "group": "5ce9ee3403a8972c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Trạng thái cửa",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 920,
        "y": 440,
        "wires": []
    },
    {
        "id": "dd20f4b85f4356ec",
        "type": "mqtt in",
        "z": "265eeabc37a6c132",
        "name": "",
        "topic": "/22127344/temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 80,
        "wires": [
            [
                "2dac1f094dac7e91"
            ]
        ]
    },
    {
        "id": "2dac1f094dac7e91",
        "type": "debug",
        "z": "265eeabc37a6c132",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 80,
        "wires": []
    },
    {
        "id": "14603b37b156ed8c",
        "type": "mqtt out",
        "z": "265eeabc37a6c132",
        "name": "",
        "topic": "",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 330,
        "y": 220,
        "wires": []
    },
    {
        "id": "eea7e61c47c1f959",
        "type": "ui_date_picker",
        "z": "265eeabc37a6c132",
        "name": "",
        "label": "date",
        "group": "12111436f1e3fc07",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": true,
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "14603b37b156ed8c"
            ]
        ]
    },
    {
        "id": "1867ba5a5a47ec45",
        "type": "ui_form",
        "z": "265eeabc37a6c132",
        "name": "Login",
        "label": "",
        "group": "f8864be9c8fccaeb",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 500,
        "wires": [
            [
                "6d81fc60da2a257e"
            ]
        ]
    },
    {
        "id": "ab825797ae1a9fc5",
        "type": "ui_ui_control",
        "z": "265eeabc37a6c132",
        "name": "Sign in",
        "events": "all",
        "x": 750,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "90cd299a18383247",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "Username",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 860,
        "wires": [
            [
                "dc5a1bcdcdbf85af"
            ]
        ]
    },
    {
        "id": "a71d7263f2c34141",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "Password",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 920,
        "wires": [
            [
                "45f1cd0220938f0b"
            ]
        ]
    },
    {
        "id": "dc5a1bcdcdbf85af",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "function 1",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 860,
        "wires": [
            [
                "ab825797ae1a9fc5"
            ]
        ]
    },
    {
        "id": "45f1cd0220938f0b",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "function 2",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 920,
        "wires": [
            [
                "ab825797ae1a9fc5"
            ]
        ]
    },
    {
        "id": "6d81fc60da2a257e",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (username == flow.get(\"user\"))\n{\n    if (password == flow.get(\"pass\"))\n    {\n        msg.payload = 0;\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "342196d9468a407f"
            ]
        ]
    },
    {
        "id": "342196d9468a407f",
        "type": "switch",
        "z": "265eeabc37a6c132",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 500,
        "wires": [
            [
                "d1e3062d270104f2"
            ],
            [
                "48b899df10f04541"
            ]
        ]
    },
    {
        "id": "d1e3062d270104f2",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 460,
        "wires": [
            [
                "3f2a3296932d74ce"
            ]
        ]
    },
    {
        "id": "48b899df10f04541",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 540,
        "wires": [
            [
                "b2cf990893984980"
            ]
        ]
    },
    {
        "id": "3f2a3296932d74ce",
        "type": "ui_ui_control",
        "z": "265eeabc37a6c132",
        "name": "Homepage",
        "events": "all",
        "x": 930,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b2cf990893984980",
        "type": "ui_toast",
        "z": "265eeabc37a6c132",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 930,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "4b7683155150b5a5",
        "type": "comment",
        "z": "265eeabc37a6c132",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 440,
        "wires": []
    },
    {
        "id": "0e3224e2b21d52a3",
        "type": "ui_button",
        "z": "265eeabc37a6c132",
        "name": "Logout",
        "group": "8f723c0be1f93bcd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 640,
        "wires": [
            [
                "9283ba3da481b698"
            ]
        ]
    },
    {
        "id": "9f20d38879bc26c7",
        "type": "inject",
        "z": "265eeabc37a6c132",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "90cd299a18383247",
                "a71d7263f2c34141"
            ]
        ]
    },
    {
        "id": "9283ba3da481b698",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 640,
        "wires": [
            [
                "48925b8955508bad"
            ]
        ]
    },
    {
        "id": "48925b8955508bad",
        "type": "ui_ui_control",
        "z": "265eeabc37a6c132",
        "name": "Logout",
        "events": "all",
        "x": 470,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "b8b9a658dab7c9d9",
        "type": "comment",
        "z": "265eeabc37a6c132",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 160,
        "y": 720,
        "wires": []
    },
    {
        "id": "07e6fb9094836bcc",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.openweathermap.org/data/2.5/weather?id=1580578&appid=bdc87536ce16f695eea1f63159c980f5&units=metric",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 140,
        "wires": [
            [
                "b5cf921b228c6cc7"
            ]
        ]
    },
    {
        "id": "0575f6edf8aee8ac",
        "type": "inject",
        "z": "265eeabc37a6c132",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 580,
        "y": 140,
        "wires": [
            [
                "07e6fb9094836bcc"
            ]
        ]
    },
    {
        "id": "b5cf921b228c6cc7",
        "type": "json",
        "z": "265eeabc37a6c132",
        "name": "temp",
        "property": "payload",
        "action": "",
        "pretty": true,
        "x": 970,
        "y": 240,
        "wires": [
            [
                "e4e8acb6d2f62431",
                "c1e4fcd61552ad32"
            ]
        ]
    },
    {
        "id": "7f915a08d848eea2",
        "type": "inject",
        "z": "265eeabc37a6c132",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 560,
        "y": 280,
        "wires": [
            [
                "95a0406c7f0a9760"
            ]
        ]
    },
    {
        "id": "95a0406c7f0a9760",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=11K54XX95HWOFJD1&field1=27",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 770,
        "y": 300,
        "wires": [
            [
                "c1e4fcd61552ad32"
            ]
        ]
    },
    {
        "id": "c1e4fcd61552ad32",
        "type": "debug",
        "z": "265eeabc37a6c132",
        "name": "debug 5",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 300,
        "wires": []
    },
    {
        "id": "e4e8acb6d2f62431",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "function 5",
        "func": "\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "4b4cd7394ecdbbac",
        "type": "comment",
        "z": "265eeabc37a6c132",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 130,
        "y": 960,
        "wires": []
    },
    {
        "id": "18982605d627389e",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Mở/khóa cửa",
        "func": "if (msg.payload == \"true\")\n{\n    msg.payload = \"on\"\n}\nelse{\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1040,
        "wires": [
            [
                "4c9bb265de0f4ed6",
                "26ae9ed59e4650fa"
            ]
        ]
    },
    {
        "id": "4c9bb265de0f4ed6",
        "type": "mqtt out",
        "z": "265eeabc37a6c132",
        "name": "",
        "topic": "/22127344/DoorControl",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "1fafc09964ec5a6f",
        "x": 630,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ded11238af3b7981",
        "type": "mqtt in",
        "z": "265eeabc37a6c132",
        "name": "",
        "topic": "SmartLock/In",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 90,
        "y": 1280,
        "wires": [
            [
                "cfdff54a98de7dd3"
            ]
        ]
    },
    {
        "id": "cfdff54a98de7dd3",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Get Temp and humid",
        "func": "var p = msg.payload\nmsg.payload = []\n\nconst arr = [p.temp,p.humid]\nflow.set(\"temp\", arr[0])\nflow.set(\"humid\", arr[1])\n\nmsg.payload.push(arr[0])\nmsg.payload.push(arr[1]) \n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 1340,
        "wires": [
            [
                "50b052629f8ca8a2"
            ]
        ]
    },
    {
        "id": "a4e12334b5e446f6",
        "type": "ui_gauge",
        "z": "265eeabc37a6c132",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{msg.temp}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1360,
        "wires": []
    },
    {
        "id": "750e78e9eccee74c",
        "type": "ui_gauge",
        "z": "265eeabc37a6c132",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{msg.humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 470,
        "y": 1400,
        "wires": []
    },
    {
        "id": "2aa47f2dc7d41c06",
        "type": "comment",
        "z": "265eeabc37a6c132",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1200,
        "wires": []
    },
    {
        "id": "903d9c4865a641aa",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 580,
        "y": 1280,
        "wires": [
            [
                "0eb1c4f1e93d953e",
                "2844ff4a60796670"
            ]
        ]
    },
    {
        "id": "50b052629f8ca8a2",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1280,
        "wires": [
            [
                "903d9c4865a641aa",
                "a4e12334b5e446f6",
                "750e78e9eccee74c"
            ]
        ]
    },
    {
        "id": "2844ff4a60796670",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1240,
        "wires": [
            [
                "c03705e05d394bad"
            ]
        ]
    },
    {
        "id": "c03705e05d394bad",
        "type": "json",
        "z": "265eeabc37a6c132",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1240,
        "wires": [
            [
                "1359ae4f6e5f48b2"
            ]
        ]
    },
    {
        "id": "1359ae4f6e5f48b2",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n// msg.payload = field1Values[field1Values.length - 1];\nvar latestValues = field1Values.slice(-10);\nmsg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1240,
        "wires": [
            [
                "09335ff3ff2745dc"
            ]
        ]
    },
    {
        "id": "09335ff3ff2745dc",
        "type": "ui_chart",
        "z": "265eeabc37a6c132",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1250,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "0eb1c4f1e93d953e",
        "type": "http request",
        "z": "265eeabc37a6c132",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=10",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 750,
        "y": 1320,
        "wires": [
            [
                "d2039b481f7ddea1"
            ]
        ]
    },
    {
        "id": "d2039b481f7ddea1",
        "type": "json",
        "z": "265eeabc37a6c132",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 910,
        "y": 1320,
        "wires": [
            [
                "55f6b4401408f044"
            ]
        ]
    },
    {
        "id": "55f6b4401408f044",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\nvar latestValues = field2Values.slice(-10);\nmsg.payload = latestValues;\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "a859f610afbb3875"
            ]
        ]
    },
    {
        "id": "a859f610afbb3875",
        "type": "ui_chart",
        "z": "265eeabc37a6c132",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1240,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "8df09ae51b4cd072",
        "type": "ui_switch",
        "z": "265eeabc37a6c132",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 190,
        "y": 1040,
        "wires": [
            [
                "18982605d627389e"
            ]
        ]
    },
    {
        "id": "26ae9ed59e4650fa",
        "type": "debug",
        "z": "265eeabc37a6c132",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 1000,
        "wires": []
    },
    {
        "id": "9818dcf1049dc407",
        "type": "ui_form",
        "z": "265eeabc37a6c132",
        "name": "Sign in",
        "label": "",
        "group": "9f111a7e1b7caa2d",
        "order": 0,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "971eb45219792f19",
                "6f26d69b54013bf1"
            ]
        ]
    },
    {
        "id": "9a91605215628deb",
        "type": "ui_button",
        "z": "265eeabc37a6c132",
        "name": "Button to sign in",
        "group": "f8864be9c8fccaeb",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign in",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 280,
        "y": 580,
        "wires": [
            [
                "211a5a91f844a519"
            ]
        ]
    },
    {
        "id": "211a5a91f844a519",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "sign in",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 580,
        "wires": [
            [
                "206ef457697bdda7"
            ]
        ]
    },
    {
        "id": "206ef457697bdda7",
        "type": "ui_ui_control",
        "z": "265eeabc37a6c132",
        "name": "To login",
        "events": "all",
        "x": 640,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "971eb45219792f19",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "Set sign in",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "6f26d69b54013bf1",
        "type": "function",
        "z": "265eeabc37a6c132",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 700,
        "wires": [
            [
                "018cc99c015320ce"
            ]
        ]
    },
    {
        "id": "018cc99c015320ce",
        "type": "ui_ui_control",
        "z": "265eeabc37a6c132",
        "name": "End sign in",
        "events": "all",
        "x": 1090,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "608dba878f5c9914",
        "type": "inject",
        "z": "265eeabc37a6c132",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"name\": \"anhquan\"}",
        "payloadType": "json",
        "x": 1010,
        "y": 580,
        "wires": [
            [
                "01acdc04bb2850c4"
            ]
        ]
    },
    {
        "id": "0da11018097866a9",
        "type": "debug",
        "z": "265eeabc37a6c132",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 620,
        "wires": []
    },
    {
        "id": "01acdc04bb2850c4",
        "type": "mongodb3 in",
        "z": "265eeabc37a6c132",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 1150,
        "y": 620,
        "wires": [
            [
                "0da11018097866a9"
            ]
        ]
    },
    {
        "id": "73a254b22ac08409",
        "type": "ui_form",
        "z": "2fcb2a5fc7d08d51",
        "name": "Login",
        "label": "",
        "group": "f8864be9c8fccaeb",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 90,
        "y": 360,
        "wires": [
            [
                "62f8cf24fa5dd074"
            ]
        ]
    },
    {
        "id": "43510af41140b425",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Authentication",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\nvar dbuser = msg.payload.dbuser  \nvar dbpass = msg.payload.dbpass\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\nif (dbuser != undefined && dbpass != undefined){\nif (username ==dbuser && password == dbpass )\n{\n    msg.payload = 0;\n}\n}\nreturn msg;\n\n// if (username == flow.get(\"user\"))\n// {\n//     if (password == flow.get(\"pass\"))\n//     {\n//         msg.payload = 0;\n//     }\n// }\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 360,
        "wires": [
            [
                "a202bb858175d06a",
                "83c3bd3bfc179c47"
            ]
        ]
    },
    {
        "id": "a202bb858175d06a",
        "type": "switch",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 320,
        "wires": [
            [
                "7677e96b2ce2ad21"
            ],
            [
                "cd84895b179d4d67"
            ]
        ]
    },
    {
        "id": "7677e96b2ce2ad21",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Success",
        "func": "msg.payload = { \n//     tabs:{\n//     show: [\"Smart locker LOL tracking\"],\n//     hide: [\"Login\"]\n// },\n    \"tab\":\"Smart locker LOL tracking\"\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 280,
        "wires": [
            [
                "8c3491bc9c73b2ec"
            ]
        ]
    },
    {
        "id": "cd84895b179d4d67",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Failed",
        "func": "msg.payload = \"Sai username hoặc password\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 340,
        "wires": [
            [
                "b08624962af47be8"
            ]
        ]
    },
    {
        "id": "8c3491bc9c73b2ec",
        "type": "ui_ui_control",
        "z": "2fcb2a5fc7d08d51",
        "name": "Homepage",
        "events": "all",
        "x": 1190,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "b08624962af47be8",
        "type": "ui_toast",
        "z": "2fcb2a5fc7d08d51",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng nhập thất bại",
        "name": "Failed sign in",
        "x": 1190,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "8b4d2ffc5a6685ce",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Đăng nhập",
        "info": "",
        "x": 100,
        "y": 300,
        "wires": []
    },
    {
        "id": "18f30c8a67183bbb",
        "type": "ui_button",
        "z": "2fcb2a5fc7d08d51",
        "name": "Logout",
        "group": "8f723c0be1f93bcd",
        "order": 0,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Logout",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 90,
        "y": 660,
        "wires": [
            [
                "c6c7e6457d68b9df"
            ]
        ]
    },
    {
        "id": "c6c7e6457d68b9df",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Logout",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 660,
        "wires": [
            [
                "541d6559d1ecc13d"
            ]
        ]
    },
    {
        "id": "541d6559d1ecc13d",
        "type": "ui_ui_control",
        "z": "2fcb2a5fc7d08d51",
        "name": "Logout",
        "events": "all",
        "x": 590,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "c2f966a757d006b9",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Lấy dữ liệu từ DB để check account",
        "info": "",
        "x": 180,
        "y": 440,
        "wires": []
    },
    {
        "id": "6b4bc32a8c8f4fe9",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Đóng/mở chốt khóa cửa",
        "info": "",
        "x": 110,
        "y": 880,
        "wires": []
    },
    {
        "id": "559d3491034c7746",
        "type": "mqtt in",
        "z": "2fcb2a5fc7d08d51",
        "name": "Push sensor values",
        "topic": "/SmartLock/Sensor/Temperature",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 110,
        "y": 1240,
        "wires": [
            [
                "44048a3388ca32db",
                "2a3f41981e7a792b"
            ]
        ]
    },
    {
        "id": "44048a3388ca32db",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Get Temp and humid",
        "func": "// var p = msg.payload\n// msg.payload = []\n\n// const arr = [p.temp,p.humid]\n// flow.set(\"temp\", arr[0])\n// flow.set(\"humid\", arr[1])\n\n// msg.payload.push(arr[0])\n// msg.payload.push(arr[1]) \n\n// return msg;\n\n\nvar p = msg.payload;\n\n// Split the payload string into an array using the delimiter (comma in this case)\nvar values = p.split(',');\n\nmsg.payload = {\n    \"temp\": parseFloat(values[0]),   // Temperature\n    \"humid\": parseFloat(values[1])   // Humidity\n};\n\n// Store the values if needed\nflow.set(\"temp\", msg.payload.temp);\nflow.set(\"humid\", msg.payload.humid);\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "36d3b69125aaa84c"
            ]
        ]
    },
    {
        "id": "90ba7d2aea84917f",
        "type": "ui_gauge",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 1,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Temp",
        "label": "units",
        "format": "{{temp}}",
        "min": "-30",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1200,
        "wires": []
    },
    {
        "id": "e805d65957482676",
        "type": "ui_gauge",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "group": "bf6db9d90ec7a4e5",
        "order": 2,
        "width": 0,
        "height": 0,
        "gtype": "gage",
        "title": "Humid",
        "label": "units",
        "format": "{{humid}}",
        "min": 0,
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 530,
        "y": 1380,
        "wires": []
    },
    {
        "id": "df381de9fbad0036",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Đẩy dữ liệu cảm biến từ thiết bị lên  ",
        "info": "",
        "x": 160,
        "y": 1180,
        "wires": []
    },
    {
        "id": "7dd75b9e76b9ef82",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field1={{temp}}&field2={{humid}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 620,
        "y": 1300,
        "wires": [
            [
                "995a48c534dc64fc",
                "b5970a25582c3598"
            ]
        ]
    },
    {
        "id": "36d3b69125aaa84c",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Set temp and humid",
        "func": "// Retrieve the values from the flow context\n\nmsg.temp = flow.get(\"temp\")\nmsg.humid = flow.get(\"humid\")\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1300,
        "wires": [
            [
                "7dd75b9e76b9ef82",
                "90ba7d2aea84917f",
                "e805d65957482676",
                "c70b58e5c9ca143e"
            ]
        ]
    },
    {
        "id": "b5970a25582c3598",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "Temp chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/1.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1260,
        "wires": [
            [
                "6e41139879521840"
            ]
        ]
    },
    {
        "id": "6e41139879521840",
        "type": "json",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1260,
        "wires": [
            [
                "0a34e238bf2c32c7"
            ]
        ]
    },
    {
        "id": "0a34e238bf2c32c7",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 6",
        "func": "var feeds = msg.payload.feeds\nvar field1Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    let feed = msg.payload.feeds[i];\n    if (feeds[i].field1 !== null) {\n        field1Values.push(feeds[i].field1);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\nfor (let i in field1Values ){\n    msg.payload = field1Values[i]\n}\n// msg.payload = field1Values\n// var latestValues = field1Values.slice(-10);\n// msg.payload = latestValues;\n\n\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1260,
        "wires": [
            [
                "8b54cd9e16094dfa",
                "9c9342fa8d2b381b"
            ]
        ]
    },
    {
        "id": "9c9342fa8d2b381b",
        "type": "ui_chart",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 8,
        "width": 0,
        "height": 0,
        "label": "Temperature chart ",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1230,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "995a48c534dc64fc",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "Humid chart",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/2.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 790,
        "y": 1320,
        "wires": [
            [
                "0f1a6edee8d3eebf"
            ]
        ]
    },
    {
        "id": "0f1a6edee8d3eebf",
        "type": "json",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 930,
        "y": 1320,
        "wires": [
            [
                "717c22fb8e3411f8"
            ]
        ]
    },
    {
        "id": "717c22fb8e3411f8",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 7",
        "func": "var feeds = msg.payload.feeds\nvar field2Values = [];\n\n// Iterate through the feeds array and extract field1 values\nfor (var i = 0; i < feeds.length; i++) {\n    if (feeds[i].field2 !== null) {\n        field2Values.push(feeds[i].field2);\n    }\n}\n\n// If you want to send only the latest field1 value to ThingSpeak\n//msg.payload = field2Values[field2Values.length - 1];\n// var latestValues = field2Values.slice(-10);\n// msg.payload = latestValues;\n// msg.payload = field2Values[field2Values.length - 1];\nfor (let i in field2Values) {\n    msg.payload = field2Values[i]\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 1320,
        "wires": [
            [
                "921fa87dec76d55e"
            ]
        ]
    },
    {
        "id": "921fa87dec76d55e",
        "type": "ui_chart",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "group": "2c4b226e8e819202",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Humidity chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "24",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 1220,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "7a0192f283b932aa",
        "type": "ui_form",
        "z": "2fcb2a5fc7d08d51",
        "name": "Sign up",
        "label": "",
        "group": "9f111a7e1b7caa2d",
        "order": 1,
        "width": 0,
        "height": 0,
        "options": [
            {
                "label": "Username",
                "value": "username",
                "type": "text",
                "required": true,
                "rows": null
            },
            {
                "label": "Password",
                "value": "password",
                "type": "password",
                "required": true,
                "rows": null
            },
            {
                "label": "Retype password",
                "value": "password1",
                "type": "password",
                "required": true,
                "rows": null
            }
        ],
        "formValue": {
            "username": "",
            "password": "",
            "password1": ""
        },
        "payload": "",
        "submit": "submit",
        "cancel": "",
        "topic": "topic",
        "topicType": "msg",
        "splitLayout": "",
        "className": "",
        "x": 100,
        "y": 120,
        "wires": [
            [
                "85e202dfcf8ab6a5"
            ]
        ]
    },
    {
        "id": "8b740de88d44d588",
        "type": "ui_button",
        "z": "2fcb2a5fc7d08d51",
        "name": "Tap to sign in",
        "group": "f8864be9c8fccaeb",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to sign up",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 740,
        "wires": [
            [
                "60e5cad82a781924"
            ]
        ]
    },
    {
        "id": "60e5cad82a781924",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "sign up",
        "func": "msg.payload = {\n    //     tabs:{\n        \n    //     hide: [\"Smart locker LOL tracking\",\"About\"]\n    // },\n    // tabs:{\n    //     show: [\"Login\", \"Smart locker LOL tracking\"]\n    // },\n   tabs:{\n    hide: [\"Smart locker LOL tracking\"]\n   },\n    \"tab\": \"Sign in\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 740,
        "wires": [
            [
                "8465afde2561f3d6"
            ]
        ]
    },
    {
        "id": "8465afde2561f3d6",
        "type": "ui_ui_control",
        "z": "2fcb2a5fc7d08d51",
        "name": "To sign up",
        "events": "all",
        "x": 590,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "85e202dfcf8ab6a5",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Set sign up",
        "func": "var user = msg.payload.username\nvar pass = msg.payload.password\nvar pass1 = msg.payload.password1\nflow.set(\"user\", user)\nflow.set(\"pass\", pass)\n// msg.payload = 1\n// if (pass != pass1)\n// {\n//     msg.payload = 0;\n// }\nmsg.payload = {\n    username: user,\n\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 120,
        "wires": [
            [
                "c944f71a9c88a1c0"
            ]
        ]
    },
    {
        "id": "51d488a48f72dea3",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "to login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 80,
        "wires": [
            [
                "7a0bb911989dd9e6"
            ]
        ]
    },
    {
        "id": "7a0bb911989dd9e6",
        "type": "ui_ui_control",
        "z": "2fcb2a5fc7d08d51",
        "name": "End sign up",
        "events": "all",
        "x": 1150,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9c3b622da13b4e4c",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 19",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 180,
        "wires": []
    },
    {
        "id": "2a3f41981e7a792b",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 20",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ee27e2c7c803dd1d",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "Trigger push nofi from PushSafer",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.pushsafer.com/api?k=qDJi4rt2kNLkOOzwheFx&m=Nhi%E1%BB%87t%20%C4%91%E1%BB%99%20hi%E1%BB%87n%20t%E1%BA%A1i%20l%C3%A0%C2%A0{{ payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1200,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d9efbb42ec075d4e",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Lấy dữ liệu nhiệt độ và gửi về điện thoại",
        "func": "msg.payload = flow.get(\"temp\")\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 1060,
        "wires": [
            [
                "298477e9e554a2d9"
            ]
        ]
    },
    {
        "id": "91338caa5fed3514",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Truyền thông báo về điện thoại và website",
        "info": "",
        "x": 840,
        "y": 1000,
        "wires": []
    },
    {
        "id": "32d3b17192f58891",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Thẻ từ",
        "info": "",
        "x": 60,
        "y": 2420,
        "wires": []
    },
    {
        "id": "4435b5e560165850",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Thông báo lịch sử",
        "info": "",
        "x": 100,
        "y": 2240,
        "wires": []
    },
    {
        "id": "f1b52cc1a4a72ce2",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Mở tắt cảm biến",
        "info": "",
        "x": 90,
        "y": 2640,
        "wires": []
    },
    {
        "id": "c03c21fc4172d21b",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Lấy dữ liệu và gửi về email",
        "func": "msg.topic = 'NOTIFICATION ALERT'\nvar temp = flow.get(\"temp\")\nmsg.payload = 'CẢNH BÁO: Nhiệt độ hiện tại là ' +temp + ' lớn hơn 70°C, tự động mở khóa cửa'\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1140,
        "wires": [
            [
                "298477e9e554a2d9"
            ]
        ]
    },
    {
        "id": "c70b58e5c9ca143e",
        "type": "switch",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "temp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "70",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "d9efbb42ec075d4e",
                "c03c21fc4172d21b"
            ]
        ]
    },
    {
        "id": "49b9ba3138304a76",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Lưu trữ dữ liệu cảm biến lên cloud ThingSpeak",
        "info": "",
        "x": 880,
        "y": 1220,
        "wires": []
    },
    {
        "id": "feb52b0fc027aa70",
        "type": "ui_switch",
        "z": "2fcb2a5fc7d08d51",
        "name": "Bật/tắt cảm biến",
        "label": "switch",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 100,
        "y": 1000,
        "wires": [
            [
                "3b9d8ff3cb8cdcc1"
            ]
        ]
    },
    {
        "id": "3b9d8ff3cb8cdcc1",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Mở/tắt cảm biến",
        "func": "if (msg.payload == \"true\") {\n    msg.payload = \"on\"\n}\nelse {\n    msg.payload = \"off\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "a0b989be5bbb5480",
        "type": "ui_switch",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "label": "Mở/khóa cửa",
        "tooltip": "",
        "group": "5ce9ee3403a8972c",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 90,
        "y": 920,
        "wires": [
            [
                "9ed8010ec5915a36"
            ]
        ]
    },
    {
        "id": "9ed8010ec5915a36",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Mở/khóa cửa",
        "func": "//Khóa\nif (msg.payload == \"true\")\n{\n    msg.payload = \"Door locked\"\n}\n//Mở\nelse{\n    msg.payload = \"Door open\"\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 920,
        "wires": [
            [
                "3220bdb433f9650e",
                "47e48ac7902b5a95",
                "5e2d46f126de8e76",
                "a69820def1310631"
            ]
        ]
    },
    {
        "id": "3220bdb433f9650e",
        "type": "mqtt out",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "topic": "/SmartLock/Control/DoorControl",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 610,
        "y": 920,
        "wires": []
    },
    {
        "id": "47e48ac7902b5a95",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 18",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 380,
        "y": 820,
        "wires": []
    },
    {
        "id": "5e2d46f126de8e76",
        "type": "ui_text",
        "z": "2fcb2a5fc7d08d51",
        "group": "5ce9ee3403a8972c",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "Trạng thái cửa",
        "format": "{{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 580,
        "y": 860,
        "wires": []
    },
    {
        "id": "298477e9e554a2d9",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 24",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 1080,
        "wires": []
    },
    {
        "id": "62f8cf24fa5dd074",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Set infor from form",
        "func": "var username = msg.payload.username\nvar password = msg.payload.password\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 360,
        "wires": [
            [
                "ce576dc9d7b0cbba"
            ]
        ]
    },
    {
        "id": "2cd00e48dd7ef4b0",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Set info from db",
        "func": "msg.payload.dbuser = msg.payload.username\nmsg.payload.dbpass = msg.payload.password\nmsg.payload.id = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 360,
        "wires": [
            [
                "43510af41140b425"
            ]
        ]
    },
    {
        "id": "83c3bd3bfc179c47",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 25",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 400,
        "wires": []
    },
    {
        "id": "316286d2a8580e8f",
        "type": "mqtt in",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "topic": "/SmartLock/RFID",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "5e5231a0d25397df",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 2480,
        "wires": [
            [
                "41630162ea161153",
                "303fd7425aec2873"
            ]
        ]
    },
    {
        "id": "1dc2d3038fb7f43f",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 26",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 480,
        "wires": []
    },
    {
        "id": "d71458910d4a055d",
        "type": "ui_button",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "group": "9f111a7e1b7caa2d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Tap to login",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 110,
        "y": 560,
        "wires": [
            [
                "e86af11f5754c421"
            ]
        ]
    },
    {
        "id": "e86af11f5754c421",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "To login",
        "func": "msg.payload = {\n    //     tabs:{\n    //     show: [\"Smart locker LOL tracking\"],\n    //     hide: [\"Login\"]\n    // },\n    \"tab\": \"Login\"\n\n}\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 560,
        "wires": [
            [
                "a92791a8af903ff8"
            ]
        ]
    },
    {
        "id": "a92791a8af903ff8",
        "type": "ui_ui_control",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "events": "all",
        "x": 580,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "a69820def1310631",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "Write data to DB",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/update?api_key=7PM0WMVTN41DD5KP&field3={{payload}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 560,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "a02443f3415fa1ea",
        "type": "http request",
        "z": "2fcb2a5fc7d08d51",
        "name": "History",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.thingspeak.com/channels/2618255/fields/3.json?api_key=JPW2UK3ZOWHOHFUQ&results=20",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 370,
        "y": 2280,
        "wires": [
            [
                "f812bf61cf4c7c50"
            ]
        ]
    },
    {
        "id": "f812bf61cf4c7c50",
        "type": "json",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 520,
        "y": 2280,
        "wires": [
            [
                "ec31e50a4e42eb04",
                "3eab6da59a2bc472"
            ]
        ]
    },
    {
        "id": "ec31e50a4e42eb04",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 8",
        "func": "let latestMessages = [];\n\n// Loop through the feeds array to extract the required fields\nfor (let i = 0; i < msg.payload.feeds.length; i++) {\n     if (msg.payload.feeds[i].field3 === 'Door locked' \n     || msg.payload.feeds[i].field3 === 'Door open'){ \n        let feed = msg.payload.feeds[i];\n        let date = new Date(feed.created_at);\n        let gmt7Date = new Date(date.getTime() + 7 * 60 * 60 * 1000); // Add 7 hours\n\n         // Format the adjusted date back to ISO format\n        let formattedDate = gmt7Date.toISOString().replace('T', ' ').substring(0, 19);\n    latestMessages.push({\n        \"Created_at\": formattedDate,\n        \"Status\": feed.field3\n    });}\n}\n\n// Set the latestMessages array to msg.payload for further processing\nmsg.payload = latestMessages;\n\n// Return the modified msg object\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2280,
        "wires": [
            []
        ]
    },
    {
        "id": "41630162ea161153",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 30",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 330,
        "y": 2480,
        "wires": []
    },
    {
        "id": "835db6d72a728706",
        "type": "ui_button",
        "z": "2fcb2a5fc7d08d51",
        "name": "Update",
        "group": "12111436f1e3fc07",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update cloud's history",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 210,
        "y": 2280,
        "wires": [
            [
                "a02443f3415fa1ea"
            ]
        ]
    },
    {
        "id": "8b54cd9e16094dfa",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 31",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1220,
        "y": 1280,
        "wires": []
    },
    {
        "id": "0065a7b76ee88dbe",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Đăng ký",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "29de298b1deba145",
        "type": "comment",
        "z": "2fcb2a5fc7d08d51",
        "name": "Điều hướng người dùng",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "3d0437e8341c9945",
        "type": "change",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "rules": [
            {
                "t": "move",
                "p": "payload.id",
                "pt": "msg",
                "to": "x",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 640,
        "y": 280,
        "wires": [
            [
                "3c864a7e31aa52e2",
                "0975ea138a2d2ee1"
            ]
        ]
    },
    {
        "id": "3c864a7e31aa52e2",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 32",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 280,
        "wires": []
    },
    {
        "id": "0975ea138a2d2ee1",
        "type": "mqtt out",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "topic": "SmartLock/RFID/Accessed",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "5e5231a0d25397df",
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "5cd29876f352424c",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 9",
        "func": "var sign_up_username = msg.payload.username\n\n\nmsg.payload = 1\n//flow.get(\"username\") flow.get(\"password\")\n// Nếu tên tìm thấy => failed\nif (sign_up_username != undefined) { \n    msg.payload = 0;\n}\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 60,
        "wires": [
            [
                "045e9324d4dbb615"
            ]
        ]
    },
    {
        "id": "045e9324d4dbb615",
        "type": "switch",
        "z": "2fcb2a5fc7d08d51",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 750,
        "y": 60,
        "wires": [
            [
                "fd1a634275d0b0d1"
            ],
            [
                "51d488a48f72dea3",
                "e5202e72847624d4",
                "882444607973e046"
            ]
        ]
    },
    {
        "id": "3da45a8fb03fa076",
        "type": "ui_toast",
        "z": "2fcb2a5fc7d08d51",
        "position": "dialog",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 1,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "Đăng ký thất bại",
        "name": "Failed Notification",
        "x": 1170,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "fd1a634275d0b0d1",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Failed noti",
        "func": "msg.payload = \"Đăng ký không thành công vì đã có tài khoản này.\\n Hãy thử đăng nhập!\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 950,
        "y": 40,
        "wires": [
            [
                "3da45a8fb03fa076"
            ]
        ]
    },
    {
        "id": "882444607973e046",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 10",
        "func": "msg.payload = \"Đăng ký thành công\"\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 120,
        "wires": [
            [
                "e5bb6bd0e5072275"
            ]
        ]
    },
    {
        "id": "12228bd79925735b",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 33",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 120,
        "wires": []
    },
    {
        "id": "e5202e72847624d4",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "Get account's data",
        "func": "var user = flow.get(\"user\")\nvar pass = flow.get(\"pass\")\n\nmsg.payload = {\n    username: user,\n    password: pass\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 160,
        "wires": [
            [
                "12228bd79925735b",
                "cfce0a5b9af075cb"
            ]
        ]
    },
    {
        "id": "e5bb6bd0e5072275",
        "type": "ui_toast",
        "z": "2fcb2a5fc7d08d51",
        "position": "top right",
        "displayTime": "3",
        "highlight": "",
        "sendall": true,
        "outputs": 0,
        "ok": "OK",
        "cancel": "",
        "raw": false,
        "className": "",
        "topic": "",
        "name": "",
        "x": 1100,
        "y": 120,
        "wires": []
    },
    {
        "id": "3eab6da59a2bc472",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 34",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 2340,
        "wires": []
    },
    {
        "id": "303fd7425aec2873",
        "type": "function",
        "z": "2fcb2a5fc7d08d51",
        "name": "function 11",
        "func": "//  var id = 66c6036974ba516a448ee027\n// var id = ObjectID(66c6036974ba516a448ee027)\n// msg._id = {_id: '66c6036974ba516a448ee027'}\nmsg.payload= {\n   _id:\"66c6036974ba516a448ee027\"\n }\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 2440,
        "wires": [
            [
                "68465db520a2ae2d"
            ]
        ]
    },
    {
        "id": "51d674a8b49b8e21",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 35",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 2440,
        "wires": []
    },
    {
        "id": "68465db520a2ae2d",
        "type": "debug",
        "z": "2fcb2a5fc7d08d51",
        "name": "debug 36",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 2400,
        "wires": []
    },
    {
        "id": "cfce0a5b9af075cb",
        "type": "mongodb3 in",
        "z": "2fcb2a5fc7d08d51",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "Insert accounts to DB",
        "collection": "Accounts",
        "operation": "insert",
        "x": 700,
        "y": 180,
        "wires": [
            [
                "9c3b622da13b4e4c"
            ]
        ]
    },
    {
        "id": "ce576dc9d7b0cbba",
        "type": "mongodb3 in",
        "z": "2fcb2a5fc7d08d51",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "2cd00e48dd7ef4b0",
                "1dc2d3038fb7f43f",
                "3d0437e8341c9945"
            ]
        ]
    },
    {
        "id": "c944f71a9c88a1c0",
        "type": "mongodb3 in",
        "z": "2fcb2a5fc7d08d51",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 490,
        "y": 20,
        "wires": [
            [
                "5cd29876f352424c"
            ]
        ]
    },
    {
        "id": "832517abae2f61fb",
        "type": "mongodb3 in",
        "z": "2fcb2a5fc7d08d51",
        "service": "_ext_",
        "configNode": "994d90d6fbc5a06e",
        "name": "",
        "collection": "Accounts",
        "operation": "findOne",
        "x": 710,
        "y": 2440,
        "wires": [
            [
                "51d674a8b49b8e21"
            ]
        ]
    }
]